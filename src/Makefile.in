# Makefile.in generated by automake 1.14.1 from Makefile.am.
# @configure_input@

# Copyright (C) 1994-2013 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@

VPATH = @srcdir@
am__is_gnu_make = test -n '$(MAKEFILE_LIST)' && test -n '$(MAKELEVEL)'
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkglibexecdir = $(libexecdir)/@PACKAGE@
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@
target_triplet = @target@
bin_PROGRAMS = katana$(EXEEXT)
subdir = src
DIST_COMMON = $(srcdir)/Makefile.in $(srcdir)/Makefile.am \
	$(top_srcdir)/depcomp
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
am__installdirs = "$(DESTDIR)$(bindir)"
PROGRAMS = $(bin_PROGRAMS)
am__dirstamp = $(am__leading_dot)dirstamp
am__objects_1 = patchwrite/katana-patchwrite.$(OBJEXT) \
	patchwrite/katana-codediff.$(OBJEXT) \
	patchwrite/katana-typediff.$(OBJEXT) \
	patchwrite/katana-sourcetree.$(OBJEXT) \
	patchwrite/katana-write_to_dwarf.$(OBJEXT) \
	patchwrite/katana-elfcmp.$(OBJEXT)
am__objects_2 = patcher/katana-hotpatch.$(OBJEXT) \
	patcher/katana-target.$(OBJEXT) \
	patcher/katana-patchapply.$(OBJEXT) \
	patcher/katana-versioning.$(OBJEXT) \
	patcher/katana-linkmap.$(OBJEXT) \
	patcher/katana-safety.$(OBJEXT) patcher/katana-pmap.$(OBJEXT)
am__objects_3 = util/katana-dictionary.$(OBJEXT) \
	util/katana-hash.$(OBJEXT) util/katana-util.$(OBJEXT) \
	util/katana-map.$(OBJEXT) util/katana-list.$(OBJEXT) \
	util/katana-logging.$(OBJEXT) util/katana-path.$(OBJEXT) \
	util/katana-refcounted.$(OBJEXT) util/katana-stack.$(OBJEXT) \
	util/katana-cxxutil.$(OBJEXT) \
	util/katana-growingBuffer.$(OBJEXT) util/katana-file.$(OBJEXT)
am__objects_4 = info/katana-fdedump.$(OBJEXT) \
	info/katana-dwinfo_dump.$(OBJEXT) \
	info/katana-unsafe_funcs_dump.$(OBJEXT)
am__objects_5 = rewriter/katana-rewrite.$(OBJEXT)
am__objects_6 = shell/commands/katana-command.$(OBJEXT) \
	shell/commands/katana-loadCommand.$(OBJEXT) \
	shell/commands/katana-saveCommand.$(OBJEXT) \
	shell/commands/katana-replaceCommand.$(OBJEXT) \
	shell/commands/katana-dwarfscriptCommand.$(OBJEXT) \
	shell/commands/katana-shellCommand.$(OBJEXT) \
	shell/commands/katana-infoCommand.$(OBJEXT) \
	shell/commands/katana-hashCommand.$(OBJEXT) \
	shell/commands/katana-patchCommand.$(OBJEXT) \
	shell/commands/katana-extractCommand.$(OBJEXT)
am__objects_7 = shell/variableTypes/katana-elfVariableData.$(OBJEXT) \
	shell/variableTypes/katana-rawVariableData.$(OBJEXT) \
	shell/variableTypes/katana-arrayData.$(OBJEXT) \
	shell/variableTypes/katana-elfSectionData.$(OBJEXT) \
	shell/variableTypes/katana-stringData.$(OBJEXT)
am__objects_8 = shell/dwarfscript/katana-dwarfscript.yy.$(OBJEXT) \
	shell/dwarfscript/katana-dwarfscript.tab.$(OBJEXT)
am__objects_9 = shell/katana-shell.$(OBJEXT) \
	shell/katana-shell.yy.$(OBJEXT) \
	shell/katana-shell.tab.$(OBJEXT) shell/katana-param.$(OBJEXT) \
	shell/katana-variable.$(OBJEXT) \
	shell/katana-arrayAccessParam.$(OBJEXT) $(am__objects_6) \
	$(am__objects_7) $(am__objects_8)
am_katana_OBJECTS = katana-katana.$(OBJEXT) \
	katana-dwarftypes.$(OBJEXT) katana-elfparse.$(OBJEXT) \
	katana-elfutil.$(OBJEXT) katana-types.$(OBJEXT) \
	katana-dwarf_instr.$(OBJEXT) katana-register.$(OBJEXT) \
	katana-relocation.$(OBJEXT) katana-symbol.$(OBJEXT) \
	katana-fderead.$(OBJEXT) katana-dwarfvm.$(OBJEXT) \
	katana-katana_config.$(OBJEXT) katana-leb.$(OBJEXT) \
	katana-callFrameInfo.$(OBJEXT) katana-exceptTable.$(OBJEXT) \
	katana-commandLine.$(OBJEXT) katana-elfwriter.$(OBJEXT) \
	katana-eh_pe.$(OBJEXT) $(am__objects_1) $(am__objects_2) \
	$(am__objects_3) $(am__objects_4) $(am__objects_5) \
	$(am__objects_9)
katana_OBJECTS = $(am_katana_OBJECTS)
katana_DEPENDENCIES =
katana_LINK = $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(katana_LDFLAGS) \
	$(LDFLAGS) -o $@
AM_V_P = $(am__v_P_@AM_V@)
am__v_P_ = $(am__v_P_@AM_DEFAULT_V@)
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_@AM_V@)
am__v_GEN_ = $(am__v_GEN_@AM_DEFAULT_V@)
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_@AM_V@)
am__v_at_ = $(am__v_at_@AM_DEFAULT_V@)
am__v_at_0 = @
am__v_at_1 = 
DEFAULT_INCLUDES = -I.@am__isrc@ -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
AM_V_lt = $(am__v_lt_@AM_V@)
am__v_lt_ = $(am__v_lt_@AM_DEFAULT_V@)
am__v_lt_0 = --silent
am__v_lt_1 = 
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
AM_V_CC = $(am__v_CC_@AM_V@)
am__v_CC_ = $(am__v_CC_@AM_DEFAULT_V@)
am__v_CC_0 = @echo "  CC      " $@;
am__v_CC_1 = 
CCLD = $(CC)
LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CCLD = $(am__v_CCLD_@AM_V@)
am__v_CCLD_ = $(am__v_CCLD_@AM_DEFAULT_V@)
am__v_CCLD_0 = @echo "  CCLD    " $@;
am__v_CCLD_1 = 
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
AM_V_CXX = $(am__v_CXX_@AM_V@)
am__v_CXX_ = $(am__v_CXX_@AM_DEFAULT_V@)
am__v_CXX_0 = @echo "  CXX     " $@;
am__v_CXX_1 = 
CXXLD = $(CXX)
CXXLINK = $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) \
	-o $@
AM_V_CXXLD = $(am__v_CXXLD_@AM_V@)
am__v_CXXLD_ = $(am__v_CXXLD_@AM_DEFAULT_V@)
am__v_CXXLD_0 = @echo "  CXXLD   " $@;
am__v_CXXLD_1 = 
SOURCES = $(katana_SOURCES)
DIST_SOURCES = $(katana_SOURCES)
RECURSIVE_TARGETS = all-recursive check-recursive cscopelist-recursive \
	ctags-recursive dvi-recursive html-recursive info-recursive \
	install-data-recursive install-dvi-recursive \
	install-exec-recursive install-html-recursive \
	install-info-recursive install-pdf-recursive \
	install-ps-recursive install-recursive installcheck-recursive \
	installdirs-recursive pdf-recursive ps-recursive \
	tags-recursive uninstall-recursive
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
RECURSIVE_CLEAN_TARGETS = mostlyclean-recursive clean-recursive	\
  distclean-recursive maintainer-clean-recursive
am__recursive_targets = \
  $(RECURSIVE_TARGETS) \
  $(RECURSIVE_CLEAN_TARGETS) \
  $(am__extra_recursive_targets)
AM_RECURSIVE_TARGETS = $(am__recursive_targets:-recursive=) TAGS CTAGS \
	distdir
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
ETAGS = etags
CTAGS = ctags
DIST_SUBDIRS = $(SUBDIRS)
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
am__relativize = \
  dir0=`pwd`; \
  sed_first='s,^\([^/]*\)/.*$$,\1,'; \
  sed_rest='s,^[^/]*/*,,'; \
  sed_last='s,^.*/\([^/]*\)$$,\1,'; \
  sed_butlast='s,/*[^/]*$$,,'; \
  while test -n "$$dir1"; do \
    first=`echo "$$dir1" | sed -e "$$sed_first"`; \
    if test "$$first" != "."; then \
      if test "$$first" = ".."; then \
        dir2=`echo "$$dir0" | sed -e "$$sed_last"`/"$$dir2"; \
        dir0=`echo "$$dir0" | sed -e "$$sed_butlast"`; \
      else \
        first2=`echo "$$dir2" | sed -e "$$sed_first"`; \
        if test "$$first2" = "$$first"; then \
          dir2=`echo "$$dir2" | sed -e "$$sed_rest"`; \
        else \
          dir2="../$$dir2"; \
        fi; \
        dir0="$$dir0"/"$$first"; \
      fi; \
    fi; \
    dir1=`echo "$$dir1" | sed -e "$$sed_rest"`; \
  done; \
  reldir="$$dir2"
ACLOCAL = @ACLOCAL@
AMTAR = @AMTAR@
AM_DEFAULT_VERBOSITY = @AM_DEFAULT_VERBOSITY@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CXX = @CXX@
CXXDEPMODE = @CXXDEPMODE@
CXXFLAGS = @CXXFLAGS@
CYGPATH_W = @CYGPATH_W@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
EXEEXT = @EXEEXT@
GREP = @GREP@
HAVE_BISON = @HAVE_BISON@
HAVE_FLEX = @HAVE_FLEX@
HAVE_PYTHON = @HAVE_PYTHON@
INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
LDFLAGS = @LDFLAGS@
LIBOBJS = @LIBOBJS@
LIBS = @LIBS@
LIBUNWIND = @LIBUNWIND@
LTLIBOBJS = @LTLIBOBJS@
MAKEINFO = @MAKEINFO@
MKDIR_P = @MKDIR_P@
OBJEXT = @OBJEXT@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_URL = @PACKAGE_URL@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
STRIP = @STRIP@
VERSION = @VERSION@
abs_builddir = @abs_builddir@
abs_srcdir = @abs_srcdir@
abs_top_builddir = @abs_top_builddir@
abs_top_srcdir = @abs_top_srcdir@
ac_ct_CC = @ac_ct_CC@
ac_ct_CXX = @ac_ct_CXX@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
builddir = @builddir@
datadir = @datadir@
datarootdir = @datarootdir@
docdir = @docdir@
dvidir = @dvidir@
exec_prefix = @exec_prefix@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
htmldir = @htmldir@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localedir = @localedir@
localstatedir = @localstatedir@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
pdfdir = @pdfdir@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
srcdir = @srcdir@
sysconfdir = @sysconfdir@
target = @target@
target_alias = @target_alias@
target_cpu = @target_cpu@
target_os = @target_os@
target_vendor = @target_vendor@
top_build_prefix = @top_build_prefix@
top_builddir = @top_builddir@
top_srcdir = @top_srcdir@

#File: Makefile.am
#Author: James Oakley
SUBDIRS = shell
AUTOMAKE_OPTIONS = subdir-objects
INCLUDEFLAGS = -I ../include -I $(srcdir)/
DEFINEFLAGS = -D_POSIX_SOURCE -D_BSD_SOURCE -D_XOPEN_SOURCE -D_GNU_SOURCE -DDEBUG -Doff64_t=__off64_t 
katana_CFLAGS = $(INCLUDEFLAGS) -g -Wall -std=c99 $(DEFINEFLAGS)
katana_CPPFLAGS = $(INCLUDEFLAGS) -g -Wall  $(DEFINEFLAGS)
katana_LDFLAGS = -L /usr/local/lib -L ../external/
katana_LDADD = -ldwarf -lelf -lm -lunwind  -lunwind-ptrace -l$(LIBUNWIND) -lreadline
PATCHER_SRC = patcher/hotpatch.c patcher/target.c patcher/patchapply.c patcher/versioning.c patcher/linkmap.c patcher/safety.c patcher/pmap.c
PATCHER_H = patcher/hotpatch.h patcher/target.h patcher/patchapply.h patcher/versioning.h patcher/linkmap.h patcher/safety.h patcher/pmap.h
PATCHWRITE_SRC = patchwrite/patchwrite.c patchwrite/codediff.c patchwrite/typediff.c  patchwrite/sourcetree.c patchwrite/write_to_dwarf.c patchwrite/elfcmp.c
PATCHWRITE_H = patchwrite/patchwrite.h patchwrite/codediff.h patchwrite/typediff.h patchwrite/sourcetree.h patchwrite/write_to_dwarf.h patchwrite/elfcmp.h
UTIL_SRC = util/dictionary.c util/hash.c util/util.c util/map.c util/list.c util/logging.c util/path.c util/refcounted.c util/stack.c util/cxxutil.cpp util/growingBuffer.c util/file.c
UTIL_H = util/dictionary.h util/hash.h util/util.h util/map.h util/list.h util/logging.h util/path.h util/refcounted.h util/stack.h util/cxxutil.h util/growingBuffer.h util/file.h
SHELL_VARIABLE_SRC = shell/variableTypes/elfVariableData.cpp shell/variableTypes/rawVariableData.cpp shell/variableTypes/arrayData.cpp shell/variableTypes/elfSectionData.cpp shell/variableTypes/stringData.cpp
SHELL_VARIABLE_H = shell/variableTypes/elfVariableData.h shell/variableTypes/rawVariableData.h shell/variableTypes/arrayData.h shell/variableTypes/elfSectionData.h shell/variableTypes/stringData.h
SHELL_COMMANDS_SRC = shell/commands/command.cpp shell/commands/loadCommand.cpp shell/commands/saveCommand.cpp shell/commands/replaceCommand.cpp shell/commands/dwarfscriptCommand.cpp shell/commands/shellCommand.cpp shell/commands/infoCommand.cpp  shell/commands/hashCommand.cpp shell/commands/patchCommand.cpp shell/commands/extractCommand.cpp
SHELL_COMMANDS_H = shell/commands/command.h shell/commands/loadCommand.h shell/commands/saveCommand.h shell/commands/replaceCommand.h shell/commands/dwarfscriptCommand.h shell/commands/shellCommand.h shell/commands/infoCommand.h shell/commands/hashCommand.cpp shell/commands/patchCommand.h shell/commands/extractCommand.h
DWARFSCRIPT_SRC = shell/dwarfscript/dwarfscript.yy.c shell/dwarfscript/dwarfscript.tab.c
DWARFSCRIPT_H = shell/dwarfscript/dwarfscript.tab.h
SHELL_SRC = shell/shell.cpp  shell/shell.yy.cpp shell/shell.tab.cpp shell/param.cpp shell/variable.cpp shell/arrayAccessParam.cpp $(SHELL_COMMANDS_SRC) $(SHELL_VARIABLE_SRC) $(DWARFSCRIPT_SRC)
SHELL_H = shell/shell.h shell/parse_helper.h shell/shell.tab.hpp shell/param.h shell/variable.h  shell/arrayAccessParam.h $(SHELL_COMMANDS_SRC) $(SHELL_VARIABLE_H) $(DWARFSCRIPT_H)
INFO_SRC = info/fdedump.c info/dwinfo_dump.c  info/unsafe_funcs_dump.c
INFO_H = info/fdedump.h info/dwinfo_dump.h  info/unsafe_funcs_dump.h
REWRITER_SRC = rewriter/rewrite.c
REWRITER_H = rewriter/rewrite.h
H_FILES = dwarftypes.h elfparse.h elfutil.h types.h dwarf_instr.h register.h relocation.h symbol.h fderead.h dwarfvm.h config.h arch.h constants.h leb.h callFrameInfo.h  elfwriter.h eh_pe.h $(PATCHER_H) $(PATCHWRITE_H) $(UTIL_H) $(INFO_H) $(REWRITER_H) $(SHELL_H)
EXTRA_DIST = $(H_FILES)
katana_SOURCES = katana.c dwarftypes.c   elfparse.c elfutil.c  types.c  dwarf_instr.c register.c relocation.c symbol.c fderead.c dwarfvm.c katana_config.c leb.c callFrameInfo.c exceptTable.c commandLine.c  elfwriter.c eh_pe.c $(PATCHWRITE_SRC) $(PATCHER_SRC) $(UTIL_SRC) $(INFO_SRC) $(REWRITER_SRC) $(SHELL_SRC)
BFLAGS = -d -v
all: all-recursive

.SUFFIXES:
.SUFFIXES: .c .cpp .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign src/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --foreign src/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(bindir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(bindir)" || exit 1; \
	fi; \
	for p in $$list; do echo "$$p $$p"; done | \
	sed 's/$(EXEEXT)$$//' | \
	while read p p1; do if test -f $$p \
	  ; then echo "$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n;h' \
	    -e 's|.*|.|' \
	    -e 'p;x;s,.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/' | \
	sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1 } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) files[d] = files[d] " " $$1; \
	    else { print "f", $$3 "/" $$4, $$1; } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	    if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	    test -z "$$files" || { \
	      echo " $(INSTALL_PROGRAM_ENV) $(INSTALL_PROGRAM) $$files '$(DESTDIR)$(bindir)$$dir'"; \
	      $(INSTALL_PROGRAM_ENV) $(INSTALL_PROGRAM) $$files "$(DESTDIR)$(bindir)$$dir" || exit $$?; \
	    } \
	; done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	files=`for p in $$list; do echo "$$p"; done | \
	  sed -e 'h;s,^.*/,,;s/$(EXEEXT)$$//;$(transform)' \
	      -e 's/$$/$(EXEEXT)/' \
	`; \
	test -n "$$list" || exit 0; \
	echo " ( cd '$(DESTDIR)$(bindir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(bindir)" && rm -f $$files

clean-binPROGRAMS:
	-test -z "$(bin_PROGRAMS)" || rm -f $(bin_PROGRAMS)
patchwrite/$(am__dirstamp):
	@$(MKDIR_P) patchwrite
	@: > patchwrite/$(am__dirstamp)
patchwrite/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) patchwrite/$(DEPDIR)
	@: > patchwrite/$(DEPDIR)/$(am__dirstamp)
patchwrite/katana-patchwrite.$(OBJEXT): patchwrite/$(am__dirstamp) \
	patchwrite/$(DEPDIR)/$(am__dirstamp)
patchwrite/katana-codediff.$(OBJEXT): patchwrite/$(am__dirstamp) \
	patchwrite/$(DEPDIR)/$(am__dirstamp)
patchwrite/katana-typediff.$(OBJEXT): patchwrite/$(am__dirstamp) \
	patchwrite/$(DEPDIR)/$(am__dirstamp)
patchwrite/katana-sourcetree.$(OBJEXT): patchwrite/$(am__dirstamp) \
	patchwrite/$(DEPDIR)/$(am__dirstamp)
patchwrite/katana-write_to_dwarf.$(OBJEXT):  \
	patchwrite/$(am__dirstamp) \
	patchwrite/$(DEPDIR)/$(am__dirstamp)
patchwrite/katana-elfcmp.$(OBJEXT): patchwrite/$(am__dirstamp) \
	patchwrite/$(DEPDIR)/$(am__dirstamp)
patcher/$(am__dirstamp):
	@$(MKDIR_P) patcher
	@: > patcher/$(am__dirstamp)
patcher/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) patcher/$(DEPDIR)
	@: > patcher/$(DEPDIR)/$(am__dirstamp)
patcher/katana-hotpatch.$(OBJEXT): patcher/$(am__dirstamp) \
	patcher/$(DEPDIR)/$(am__dirstamp)
patcher/katana-target.$(OBJEXT): patcher/$(am__dirstamp) \
	patcher/$(DEPDIR)/$(am__dirstamp)
patcher/katana-patchapply.$(OBJEXT): patcher/$(am__dirstamp) \
	patcher/$(DEPDIR)/$(am__dirstamp)
patcher/katana-versioning.$(OBJEXT): patcher/$(am__dirstamp) \
	patcher/$(DEPDIR)/$(am__dirstamp)
patcher/katana-linkmap.$(OBJEXT): patcher/$(am__dirstamp) \
	patcher/$(DEPDIR)/$(am__dirstamp)
patcher/katana-safety.$(OBJEXT): patcher/$(am__dirstamp) \
	patcher/$(DEPDIR)/$(am__dirstamp)
patcher/katana-pmap.$(OBJEXT): patcher/$(am__dirstamp) \
	patcher/$(DEPDIR)/$(am__dirstamp)
util/$(am__dirstamp):
	@$(MKDIR_P) util
	@: > util/$(am__dirstamp)
util/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) util/$(DEPDIR)
	@: > util/$(DEPDIR)/$(am__dirstamp)
util/katana-dictionary.$(OBJEXT): util/$(am__dirstamp) \
	util/$(DEPDIR)/$(am__dirstamp)
util/katana-hash.$(OBJEXT): util/$(am__dirstamp) \
	util/$(DEPDIR)/$(am__dirstamp)
util/katana-util.$(OBJEXT): util/$(am__dirstamp) \
	util/$(DEPDIR)/$(am__dirstamp)
util/katana-map.$(OBJEXT): util/$(am__dirstamp) \
	util/$(DEPDIR)/$(am__dirstamp)
util/katana-list.$(OBJEXT): util/$(am__dirstamp) \
	util/$(DEPDIR)/$(am__dirstamp)
util/katana-logging.$(OBJEXT): util/$(am__dirstamp) \
	util/$(DEPDIR)/$(am__dirstamp)
util/katana-path.$(OBJEXT): util/$(am__dirstamp) \
	util/$(DEPDIR)/$(am__dirstamp)
util/katana-refcounted.$(OBJEXT): util/$(am__dirstamp) \
	util/$(DEPDIR)/$(am__dirstamp)
util/katana-stack.$(OBJEXT): util/$(am__dirstamp) \
	util/$(DEPDIR)/$(am__dirstamp)
util/katana-cxxutil.$(OBJEXT): util/$(am__dirstamp) \
	util/$(DEPDIR)/$(am__dirstamp)
util/katana-growingBuffer.$(OBJEXT): util/$(am__dirstamp) \
	util/$(DEPDIR)/$(am__dirstamp)
util/katana-file.$(OBJEXT): util/$(am__dirstamp) \
	util/$(DEPDIR)/$(am__dirstamp)
info/$(am__dirstamp):
	@$(MKDIR_P) info
	@: > info/$(am__dirstamp)
info/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) info/$(DEPDIR)
	@: > info/$(DEPDIR)/$(am__dirstamp)
info/katana-fdedump.$(OBJEXT): info/$(am__dirstamp) \
	info/$(DEPDIR)/$(am__dirstamp)
info/katana-dwinfo_dump.$(OBJEXT): info/$(am__dirstamp) \
	info/$(DEPDIR)/$(am__dirstamp)
info/katana-unsafe_funcs_dump.$(OBJEXT): info/$(am__dirstamp) \
	info/$(DEPDIR)/$(am__dirstamp)
rewriter/$(am__dirstamp):
	@$(MKDIR_P) rewriter
	@: > rewriter/$(am__dirstamp)
rewriter/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) rewriter/$(DEPDIR)
	@: > rewriter/$(DEPDIR)/$(am__dirstamp)
rewriter/katana-rewrite.$(OBJEXT): rewriter/$(am__dirstamp) \
	rewriter/$(DEPDIR)/$(am__dirstamp)
shell/$(am__dirstamp):
	@$(MKDIR_P) shell
	@: > shell/$(am__dirstamp)
shell/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) shell/$(DEPDIR)
	@: > shell/$(DEPDIR)/$(am__dirstamp)
shell/katana-shell.$(OBJEXT): shell/$(am__dirstamp) \
	shell/$(DEPDIR)/$(am__dirstamp)
shell/katana-shell.yy.$(OBJEXT): shell/$(am__dirstamp) \
	shell/$(DEPDIR)/$(am__dirstamp)
shell/katana-shell.tab.$(OBJEXT): shell/$(am__dirstamp) \
	shell/$(DEPDIR)/$(am__dirstamp)
shell/katana-param.$(OBJEXT): shell/$(am__dirstamp) \
	shell/$(DEPDIR)/$(am__dirstamp)
shell/katana-variable.$(OBJEXT): shell/$(am__dirstamp) \
	shell/$(DEPDIR)/$(am__dirstamp)
shell/katana-arrayAccessParam.$(OBJEXT): shell/$(am__dirstamp) \
	shell/$(DEPDIR)/$(am__dirstamp)
shell/commands/$(am__dirstamp):
	@$(MKDIR_P) shell/commands
	@: > shell/commands/$(am__dirstamp)
shell/commands/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) shell/commands/$(DEPDIR)
	@: > shell/commands/$(DEPDIR)/$(am__dirstamp)
shell/commands/katana-command.$(OBJEXT):  \
	shell/commands/$(am__dirstamp) \
	shell/commands/$(DEPDIR)/$(am__dirstamp)
shell/commands/katana-loadCommand.$(OBJEXT):  \
	shell/commands/$(am__dirstamp) \
	shell/commands/$(DEPDIR)/$(am__dirstamp)
shell/commands/katana-saveCommand.$(OBJEXT):  \
	shell/commands/$(am__dirstamp) \
	shell/commands/$(DEPDIR)/$(am__dirstamp)
shell/commands/katana-replaceCommand.$(OBJEXT):  \
	shell/commands/$(am__dirstamp) \
	shell/commands/$(DEPDIR)/$(am__dirstamp)
shell/commands/katana-dwarfscriptCommand.$(OBJEXT):  \
	shell/commands/$(am__dirstamp) \
	shell/commands/$(DEPDIR)/$(am__dirstamp)
shell/commands/katana-shellCommand.$(OBJEXT):  \
	shell/commands/$(am__dirstamp) \
	shell/commands/$(DEPDIR)/$(am__dirstamp)
shell/commands/katana-infoCommand.$(OBJEXT):  \
	shell/commands/$(am__dirstamp) \
	shell/commands/$(DEPDIR)/$(am__dirstamp)
shell/commands/katana-hashCommand.$(OBJEXT):  \
	shell/commands/$(am__dirstamp) \
	shell/commands/$(DEPDIR)/$(am__dirstamp)
shell/commands/katana-patchCommand.$(OBJEXT):  \
	shell/commands/$(am__dirstamp) \
	shell/commands/$(DEPDIR)/$(am__dirstamp)
shell/commands/katana-extractCommand.$(OBJEXT):  \
	shell/commands/$(am__dirstamp) \
	shell/commands/$(DEPDIR)/$(am__dirstamp)
shell/variableTypes/$(am__dirstamp):
	@$(MKDIR_P) shell/variableTypes
	@: > shell/variableTypes/$(am__dirstamp)
shell/variableTypes/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) shell/variableTypes/$(DEPDIR)
	@: > shell/variableTypes/$(DEPDIR)/$(am__dirstamp)
shell/variableTypes/katana-elfVariableData.$(OBJEXT):  \
	shell/variableTypes/$(am__dirstamp) \
	shell/variableTypes/$(DEPDIR)/$(am__dirstamp)
shell/variableTypes/katana-rawVariableData.$(OBJEXT):  \
	shell/variableTypes/$(am__dirstamp) \
	shell/variableTypes/$(DEPDIR)/$(am__dirstamp)
shell/variableTypes/katana-arrayData.$(OBJEXT):  \
	shell/variableTypes/$(am__dirstamp) \
	shell/variableTypes/$(DEPDIR)/$(am__dirstamp)
shell/variableTypes/katana-elfSectionData.$(OBJEXT):  \
	shell/variableTypes/$(am__dirstamp) \
	shell/variableTypes/$(DEPDIR)/$(am__dirstamp)
shell/variableTypes/katana-stringData.$(OBJEXT):  \
	shell/variableTypes/$(am__dirstamp) \
	shell/variableTypes/$(DEPDIR)/$(am__dirstamp)
shell/dwarfscript/$(am__dirstamp):
	@$(MKDIR_P) shell/dwarfscript
	@: > shell/dwarfscript/$(am__dirstamp)
shell/dwarfscript/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) shell/dwarfscript/$(DEPDIR)
	@: > shell/dwarfscript/$(DEPDIR)/$(am__dirstamp)
shell/dwarfscript/katana-dwarfscript.yy.$(OBJEXT):  \
	shell/dwarfscript/$(am__dirstamp) \
	shell/dwarfscript/$(DEPDIR)/$(am__dirstamp)
shell/dwarfscript/katana-dwarfscript.tab.$(OBJEXT):  \
	shell/dwarfscript/$(am__dirstamp) \
	shell/dwarfscript/$(DEPDIR)/$(am__dirstamp)

katana$(EXEEXT): $(katana_OBJECTS) $(katana_DEPENDENCIES) $(EXTRA_katana_DEPENDENCIES) 
	@rm -f katana$(EXEEXT)
	$(AM_V_CXXLD)$(katana_LINK) $(katana_OBJECTS) $(katana_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)
	-rm -f info/*.$(OBJEXT)
	-rm -f patcher/*.$(OBJEXT)
	-rm -f patchwrite/*.$(OBJEXT)
	-rm -f rewriter/*.$(OBJEXT)
	-rm -f shell/*.$(OBJEXT)
	-rm -f shell/commands/*.$(OBJEXT)
	-rm -f shell/dwarfscript/*.$(OBJEXT)
	-rm -f shell/variableTypes/*.$(OBJEXT)
	-rm -f util/*.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/katana-callFrameInfo.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/katana-commandLine.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/katana-dwarf_instr.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/katana-dwarftypes.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/katana-dwarfvm.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/katana-eh_pe.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/katana-elfparse.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/katana-elfutil.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/katana-elfwriter.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/katana-exceptTable.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/katana-fderead.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/katana-katana.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/katana-katana_config.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/katana-leb.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/katana-register.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/katana-relocation.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/katana-symbol.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/katana-types.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@info/$(DEPDIR)/katana-dwinfo_dump.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@info/$(DEPDIR)/katana-fdedump.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@info/$(DEPDIR)/katana-unsafe_funcs_dump.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@patcher/$(DEPDIR)/katana-hotpatch.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@patcher/$(DEPDIR)/katana-linkmap.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@patcher/$(DEPDIR)/katana-patchapply.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@patcher/$(DEPDIR)/katana-pmap.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@patcher/$(DEPDIR)/katana-safety.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@patcher/$(DEPDIR)/katana-target.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@patcher/$(DEPDIR)/katana-versioning.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@patchwrite/$(DEPDIR)/katana-codediff.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@patchwrite/$(DEPDIR)/katana-elfcmp.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@patchwrite/$(DEPDIR)/katana-patchwrite.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@patchwrite/$(DEPDIR)/katana-sourcetree.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@patchwrite/$(DEPDIR)/katana-typediff.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@patchwrite/$(DEPDIR)/katana-write_to_dwarf.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@rewriter/$(DEPDIR)/katana-rewrite.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@shell/$(DEPDIR)/katana-arrayAccessParam.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@shell/$(DEPDIR)/katana-param.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@shell/$(DEPDIR)/katana-shell.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@shell/$(DEPDIR)/katana-shell.tab.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@shell/$(DEPDIR)/katana-shell.yy.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@shell/$(DEPDIR)/katana-variable.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@shell/commands/$(DEPDIR)/katana-command.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@shell/commands/$(DEPDIR)/katana-dwarfscriptCommand.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@shell/commands/$(DEPDIR)/katana-extractCommand.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@shell/commands/$(DEPDIR)/katana-hashCommand.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@shell/commands/$(DEPDIR)/katana-infoCommand.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@shell/commands/$(DEPDIR)/katana-loadCommand.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@shell/commands/$(DEPDIR)/katana-patchCommand.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@shell/commands/$(DEPDIR)/katana-replaceCommand.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@shell/commands/$(DEPDIR)/katana-saveCommand.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@shell/commands/$(DEPDIR)/katana-shellCommand.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@shell/dwarfscript/$(DEPDIR)/katana-dwarfscript.tab.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@shell/dwarfscript/$(DEPDIR)/katana-dwarfscript.yy.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@shell/variableTypes/$(DEPDIR)/katana-arrayData.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@shell/variableTypes/$(DEPDIR)/katana-elfSectionData.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@shell/variableTypes/$(DEPDIR)/katana-elfVariableData.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@shell/variableTypes/$(DEPDIR)/katana-rawVariableData.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@shell/variableTypes/$(DEPDIR)/katana-stringData.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@util/$(DEPDIR)/katana-cxxutil.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@util/$(DEPDIR)/katana-dictionary.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@util/$(DEPDIR)/katana-file.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@util/$(DEPDIR)/katana-growingBuffer.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@util/$(DEPDIR)/katana-hash.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@util/$(DEPDIR)/katana-list.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@util/$(DEPDIR)/katana-logging.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@util/$(DEPDIR)/katana-map.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@util/$(DEPDIR)/katana-path.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@util/$(DEPDIR)/katana-refcounted.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@util/$(DEPDIR)/katana-stack.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@util/$(DEPDIR)/katana-util.Po@am__quote@

.c.o:
@am__fastdepCC_TRUE@	$(AM_V_CC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.o$$||'`;\
@am__fastdepCC_TRUE@	$(COMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
@am__fastdepCC_TRUE@	$(am__mv) $$depbase.Tpo $$depbase.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(COMPILE) -c -o $@ $<

.c.obj:
@am__fastdepCC_TRUE@	$(AM_V_CC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.obj$$||'`;\
@am__fastdepCC_TRUE@	$(COMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ `$(CYGPATH_W) '$<'` &&\
@am__fastdepCC_TRUE@	$(am__mv) $$depbase.Tpo $$depbase.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(COMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

katana-katana.o: katana.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(katana_CPPFLAGS) $(CPPFLAGS) $(katana_CFLAGS) $(CFLAGS) -MT katana-katana.o -MD -MP -MF $(DEPDIR)/katana-katana.Tpo -c -o katana-katana.o `test -f 'katana.c' || echo '$(srcdir)/'`katana.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/katana-katana.Tpo $(DEPDIR)/katana-katana.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='katana.c' object='katana-katana.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(katana_CPPFLAGS) $(CPPFLAGS) $(katana_CFLAGS) $(CFLAGS) -c -o katana-katana.o `test -f 'katana.c' || echo '$(srcdir)/'`katana.c

katana-katana.obj: katana.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(katana_CPPFLAGS) $(CPPFLAGS) $(katana_CFLAGS) $(CFLAGS) -MT katana-katana.obj -MD -MP -MF $(DEPDIR)/katana-katana.Tpo -c -o katana-katana.obj `if test -f 'katana.c'; then $(CYGPATH_W) 'katana.c'; else $(CYGPATH_W) '$(srcdir)/katana.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/katana-katana.Tpo $(DEPDIR)/katana-katana.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='katana.c' object='katana-katana.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(katana_CPPFLAGS) $(CPPFLAGS) $(katana_CFLAGS) $(CFLAGS) -c -o katana-katana.obj `if test -f 'katana.c'; then $(CYGPATH_W) 'katana.c'; else $(CYGPATH_W) '$(srcdir)/katana.c'; fi`

katana-dwarftypes.o: dwarftypes.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(katana_CPPFLAGS) $(CPPFLAGS) $(katana_CFLAGS) $(CFLAGS) -MT katana-dwarftypes.o -MD -MP -MF $(DEPDIR)/katana-dwarftypes.Tpo -c -o katana-dwarftypes.o `test -f 'dwarftypes.c' || echo '$(srcdir)/'`dwarftypes.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/katana-dwarftypes.Tpo $(DEPDIR)/katana-dwarftypes.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='dwarftypes.c' object='katana-dwarftypes.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(katana_CPPFLAGS) $(CPPFLAGS) $(katana_CFLAGS) $(CFLAGS) -c -o katana-dwarftypes.o `test -f 'dwarftypes.c' || echo '$(srcdir)/'`dwarftypes.c

katana-dwarftypes.obj: dwarftypes.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(katana_CPPFLAGS) $(CPPFLAGS) $(katana_CFLAGS) $(CFLAGS) -MT katana-dwarftypes.obj -MD -MP -MF $(DEPDIR)/katana-dwarftypes.Tpo -c -o katana-dwarftypes.obj `if test -f 'dwarftypes.c'; then $(CYGPATH_W) 'dwarftypes.c'; else $(CYGPATH_W) '$(srcdir)/dwarftypes.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/katana-dwarftypes.Tpo $(DEPDIR)/katana-dwarftypes.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='dwarftypes.c' object='katana-dwarftypes.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(katana_CPPFLAGS) $(CPPFLAGS) $(katana_CFLAGS) $(CFLAGS) -c -o katana-dwarftypes.obj `if test -f 'dwarftypes.c'; then $(CYGPATH_W) 'dwarftypes.c'; else $(CYGPATH_W) '$(srcdir)/dwarftypes.c'; fi`

katana-elfparse.o: elfparse.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(katana_CPPFLAGS) $(CPPFLAGS) $(katana_CFLAGS) $(CFLAGS) -MT katana-elfparse.o -MD -MP -MF $(DEPDIR)/katana-elfparse.Tpo -c -o katana-elfparse.o `test -f 'elfparse.c' || echo '$(srcdir)/'`elfparse.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/katana-elfparse.Tpo $(DEPDIR)/katana-elfparse.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='elfparse.c' object='katana-elfparse.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(katana_CPPFLAGS) $(CPPFLAGS) $(katana_CFLAGS) $(CFLAGS) -c -o katana-elfparse.o `test -f 'elfparse.c' || echo '$(srcdir)/'`elfparse.c

katana-elfparse.obj: elfparse.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(katana_CPPFLAGS) $(CPPFLAGS) $(katana_CFLAGS) $(CFLAGS) -MT katana-elfparse.obj -MD -MP -MF $(DEPDIR)/katana-elfparse.Tpo -c -o katana-elfparse.obj `if test -f 'elfparse.c'; then $(CYGPATH_W) 'elfparse.c'; else $(CYGPATH_W) '$(srcdir)/elfparse.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/katana-elfparse.Tpo $(DEPDIR)/katana-elfparse.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='elfparse.c' object='katana-elfparse.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(katana_CPPFLAGS) $(CPPFLAGS) $(katana_CFLAGS) $(CFLAGS) -c -o katana-elfparse.obj `if test -f 'elfparse.c'; then $(CYGPATH_W) 'elfparse.c'; else $(CYGPATH_W) '$(srcdir)/elfparse.c'; fi`

katana-elfutil.o: elfutil.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(katana_CPPFLAGS) $(CPPFLAGS) $(katana_CFLAGS) $(CFLAGS) -MT katana-elfutil.o -MD -MP -MF $(DEPDIR)/katana-elfutil.Tpo -c -o katana-elfutil.o `test -f 'elfutil.c' || echo '$(srcdir)/'`elfutil.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/katana-elfutil.Tpo $(DEPDIR)/katana-elfutil.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='elfutil.c' object='katana-elfutil.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(katana_CPPFLAGS) $(CPPFLAGS) $(katana_CFLAGS) $(CFLAGS) -c -o katana-elfutil.o `test -f 'elfutil.c' || echo '$(srcdir)/'`elfutil.c

katana-elfutil.obj: elfutil.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(katana_CPPFLAGS) $(CPPFLAGS) $(katana_CFLAGS) $(CFLAGS) -MT katana-elfutil.obj -MD -MP -MF $(DEPDIR)/katana-elfutil.Tpo -c -o katana-elfutil.obj `if test -f 'elfutil.c'; then $(CYGPATH_W) 'elfutil.c'; else $(CYGPATH_W) '$(srcdir)/elfutil.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/katana-elfutil.Tpo $(DEPDIR)/katana-elfutil.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='elfutil.c' object='katana-elfutil.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(katana_CPPFLAGS) $(CPPFLAGS) $(katana_CFLAGS) $(CFLAGS) -c -o katana-elfutil.obj `if test -f 'elfutil.c'; then $(CYGPATH_W) 'elfutil.c'; else $(CYGPATH_W) '$(srcdir)/elfutil.c'; fi`

katana-types.o: types.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(katana_CPPFLAGS) $(CPPFLAGS) $(katana_CFLAGS) $(CFLAGS) -MT katana-types.o -MD -MP -MF $(DEPDIR)/katana-types.Tpo -c -o katana-types.o `test -f 'types.c' || echo '$(srcdir)/'`types.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/katana-types.Tpo $(DEPDIR)/katana-types.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='types.c' object='katana-types.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(katana_CPPFLAGS) $(CPPFLAGS) $(katana_CFLAGS) $(CFLAGS) -c -o katana-types.o `test -f 'types.c' || echo '$(srcdir)/'`types.c

katana-types.obj: types.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(katana_CPPFLAGS) $(CPPFLAGS) $(katana_CFLAGS) $(CFLAGS) -MT katana-types.obj -MD -MP -MF $(DEPDIR)/katana-types.Tpo -c -o katana-types.obj `if test -f 'types.c'; then $(CYGPATH_W) 'types.c'; else $(CYGPATH_W) '$(srcdir)/types.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/katana-types.Tpo $(DEPDIR)/katana-types.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='types.c' object='katana-types.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(katana_CPPFLAGS) $(CPPFLAGS) $(katana_CFLAGS) $(CFLAGS) -c -o katana-types.obj `if test -f 'types.c'; then $(CYGPATH_W) 'types.c'; else $(CYGPATH_W) '$(srcdir)/types.c'; fi`

katana-dwarf_instr.o: dwarf_instr.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(katana_CPPFLAGS) $(CPPFLAGS) $(katana_CFLAGS) $(CFLAGS) -MT katana-dwarf_instr.o -MD -MP -MF $(DEPDIR)/katana-dwarf_instr.Tpo -c -o katana-dwarf_instr.o `test -f 'dwarf_instr.c' || echo '$(srcdir)/'`dwarf_instr.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/katana-dwarf_instr.Tpo $(DEPDIR)/katana-dwarf_instr.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='dwarf_instr.c' object='katana-dwarf_instr.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(katana_CPPFLAGS) $(CPPFLAGS) $(katana_CFLAGS) $(CFLAGS) -c -o katana-dwarf_instr.o `test -f 'dwarf_instr.c' || echo '$(srcdir)/'`dwarf_instr.c

katana-dwarf_instr.obj: dwarf_instr.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(katana_CPPFLAGS) $(CPPFLAGS) $(katana_CFLAGS) $(CFLAGS) -MT katana-dwarf_instr.obj -MD -MP -MF $(DEPDIR)/katana-dwarf_instr.Tpo -c -o katana-dwarf_instr.obj `if test -f 'dwarf_instr.c'; then $(CYGPATH_W) 'dwarf_instr.c'; else $(CYGPATH_W) '$(srcdir)/dwarf_instr.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/katana-dwarf_instr.Tpo $(DEPDIR)/katana-dwarf_instr.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='dwarf_instr.c' object='katana-dwarf_instr.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(katana_CPPFLAGS) $(CPPFLAGS) $(katana_CFLAGS) $(CFLAGS) -c -o katana-dwarf_instr.obj `if test -f 'dwarf_instr.c'; then $(CYGPATH_W) 'dwarf_instr.c'; else $(CYGPATH_W) '$(srcdir)/dwarf_instr.c'; fi`

katana-register.o: register.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(katana_CPPFLAGS) $(CPPFLAGS) $(katana_CFLAGS) $(CFLAGS) -MT katana-register.o -MD -MP -MF $(DEPDIR)/katana-register.Tpo -c -o katana-register.o `test -f 'register.c' || echo '$(srcdir)/'`register.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/katana-register.Tpo $(DEPDIR)/katana-register.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='register.c' object='katana-register.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(katana_CPPFLAGS) $(CPPFLAGS) $(katana_CFLAGS) $(CFLAGS) -c -o katana-register.o `test -f 'register.c' || echo '$(srcdir)/'`register.c

katana-register.obj: register.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(katana_CPPFLAGS) $(CPPFLAGS) $(katana_CFLAGS) $(CFLAGS) -MT katana-register.obj -MD -MP -MF $(DEPDIR)/katana-register.Tpo -c -o katana-register.obj `if test -f 'register.c'; then $(CYGPATH_W) 'register.c'; else $(CYGPATH_W) '$(srcdir)/register.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/katana-register.Tpo $(DEPDIR)/katana-register.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='register.c' object='katana-register.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(katana_CPPFLAGS) $(CPPFLAGS) $(katana_CFLAGS) $(CFLAGS) -c -o katana-register.obj `if test -f 'register.c'; then $(CYGPATH_W) 'register.c'; else $(CYGPATH_W) '$(srcdir)/register.c'; fi`

katana-relocation.o: relocation.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(katana_CPPFLAGS) $(CPPFLAGS) $(katana_CFLAGS) $(CFLAGS) -MT katana-relocation.o -MD -MP -MF $(DEPDIR)/katana-relocation.Tpo -c -o katana-relocation.o `test -f 'relocation.c' || echo '$(srcdir)/'`relocation.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/katana-relocation.Tpo $(DEPDIR)/katana-relocation.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='relocation.c' object='katana-relocation.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(katana_CPPFLAGS) $(CPPFLAGS) $(katana_CFLAGS) $(CFLAGS) -c -o katana-relocation.o `test -f 'relocation.c' || echo '$(srcdir)/'`relocation.c

katana-relocation.obj: relocation.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(katana_CPPFLAGS) $(CPPFLAGS) $(katana_CFLAGS) $(CFLAGS) -MT katana-relocation.obj -MD -MP -MF $(DEPDIR)/katana-relocation.Tpo -c -o katana-relocation.obj `if test -f 'relocation.c'; then $(CYGPATH_W) 'relocation.c'; else $(CYGPATH_W) '$(srcdir)/relocation.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/katana-relocation.Tpo $(DEPDIR)/katana-relocation.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='relocation.c' object='katana-relocation.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(katana_CPPFLAGS) $(CPPFLAGS) $(katana_CFLAGS) $(CFLAGS) -c -o katana-relocation.obj `if test -f 'relocation.c'; then $(CYGPATH_W) 'relocation.c'; else $(CYGPATH_W) '$(srcdir)/relocation.c'; fi`

katana-symbol.o: symbol.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(katana_CPPFLAGS) $(CPPFLAGS) $(katana_CFLAGS) $(CFLAGS) -MT katana-symbol.o -MD -MP -MF $(DEPDIR)/katana-symbol.Tpo -c -o katana-symbol.o `test -f 'symbol.c' || echo '$(srcdir)/'`symbol.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/katana-symbol.Tpo $(DEPDIR)/katana-symbol.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='symbol.c' object='katana-symbol.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(katana_CPPFLAGS) $(CPPFLAGS) $(katana_CFLAGS) $(CFLAGS) -c -o katana-symbol.o `test -f 'symbol.c' || echo '$(srcdir)/'`symbol.c

katana-symbol.obj: symbol.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(katana_CPPFLAGS) $(CPPFLAGS) $(katana_CFLAGS) $(CFLAGS) -MT katana-symbol.obj -MD -MP -MF $(DEPDIR)/katana-symbol.Tpo -c -o katana-symbol.obj `if test -f 'symbol.c'; then $(CYGPATH_W) 'symbol.c'; else $(CYGPATH_W) '$(srcdir)/symbol.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/katana-symbol.Tpo $(DEPDIR)/katana-symbol.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='symbol.c' object='katana-symbol.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(katana_CPPFLAGS) $(CPPFLAGS) $(katana_CFLAGS) $(CFLAGS) -c -o katana-symbol.obj `if test -f 'symbol.c'; then $(CYGPATH_W) 'symbol.c'; else $(CYGPATH_W) '$(srcdir)/symbol.c'; fi`

katana-fderead.o: fderead.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(katana_CPPFLAGS) $(CPPFLAGS) $(katana_CFLAGS) $(CFLAGS) -MT katana-fderead.o -MD -MP -MF $(DEPDIR)/katana-fderead.Tpo -c -o katana-fderead.o `test -f 'fderead.c' || echo '$(srcdir)/'`fderead.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/katana-fderead.Tpo $(DEPDIR)/katana-fderead.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='fderead.c' object='katana-fderead.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(katana_CPPFLAGS) $(CPPFLAGS) $(katana_CFLAGS) $(CFLAGS) -c -o katana-fderead.o `test -f 'fderead.c' || echo '$(srcdir)/'`fderead.c

katana-fderead.obj: fderead.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(katana_CPPFLAGS) $(CPPFLAGS) $(katana_CFLAGS) $(CFLAGS) -MT katana-fderead.obj -MD -MP -MF $(DEPDIR)/katana-fderead.Tpo -c -o katana-fderead.obj `if test -f 'fderead.c'; then $(CYGPATH_W) 'fderead.c'; else $(CYGPATH_W) '$(srcdir)/fderead.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/katana-fderead.Tpo $(DEPDIR)/katana-fderead.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='fderead.c' object='katana-fderead.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(katana_CPPFLAGS) $(CPPFLAGS) $(katana_CFLAGS) $(CFLAGS) -c -o katana-fderead.obj `if test -f 'fderead.c'; then $(CYGPATH_W) 'fderead.c'; else $(CYGPATH_W) '$(srcdir)/fderead.c'; fi`

katana-dwarfvm.o: dwarfvm.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(katana_CPPFLAGS) $(CPPFLAGS) $(katana_CFLAGS) $(CFLAGS) -MT katana-dwarfvm.o -MD -MP -MF $(DEPDIR)/katana-dwarfvm.Tpo -c -o katana-dwarfvm.o `test -f 'dwarfvm.c' || echo '$(srcdir)/'`dwarfvm.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/katana-dwarfvm.Tpo $(DEPDIR)/katana-dwarfvm.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='dwarfvm.c' object='katana-dwarfvm.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(katana_CPPFLAGS) $(CPPFLAGS) $(katana_CFLAGS) $(CFLAGS) -c -o katana-dwarfvm.o `test -f 'dwarfvm.c' || echo '$(srcdir)/'`dwarfvm.c

katana-dwarfvm.obj: dwarfvm.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(katana_CPPFLAGS) $(CPPFLAGS) $(katana_CFLAGS) $(CFLAGS) -MT katana-dwarfvm.obj -MD -MP -MF $(DEPDIR)/katana-dwarfvm.Tpo -c -o katana-dwarfvm.obj `if test -f 'dwarfvm.c'; then $(CYGPATH_W) 'dwarfvm.c'; else $(CYGPATH_W) '$(srcdir)/dwarfvm.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/katana-dwarfvm.Tpo $(DEPDIR)/katana-dwarfvm.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='dwarfvm.c' object='katana-dwarfvm.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(katana_CPPFLAGS) $(CPPFLAGS) $(katana_CFLAGS) $(CFLAGS) -c -o katana-dwarfvm.obj `if test -f 'dwarfvm.c'; then $(CYGPATH_W) 'dwarfvm.c'; else $(CYGPATH_W) '$(srcdir)/dwarfvm.c'; fi`

katana-katana_config.o: katana_config.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(katana_CPPFLAGS) $(CPPFLAGS) $(katana_CFLAGS) $(CFLAGS) -MT katana-katana_config.o -MD -MP -MF $(DEPDIR)/katana-katana_config.Tpo -c -o katana-katana_config.o `test -f 'katana_config.c' || echo '$(srcdir)/'`katana_config.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/katana-katana_config.Tpo $(DEPDIR)/katana-katana_config.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='katana_config.c' object='katana-katana_config.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(katana_CPPFLAGS) $(CPPFLAGS) $(katana_CFLAGS) $(CFLAGS) -c -o katana-katana_config.o `test -f 'katana_config.c' || echo '$(srcdir)/'`katana_config.c

katana-katana_config.obj: katana_config.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(katana_CPPFLAGS) $(CPPFLAGS) $(katana_CFLAGS) $(CFLAGS) -MT katana-katana_config.obj -MD -MP -MF $(DEPDIR)/katana-katana_config.Tpo -c -o katana-katana_config.obj `if test -f 'katana_config.c'; then $(CYGPATH_W) 'katana_config.c'; else $(CYGPATH_W) '$(srcdir)/katana_config.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/katana-katana_config.Tpo $(DEPDIR)/katana-katana_config.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='katana_config.c' object='katana-katana_config.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(katana_CPPFLAGS) $(CPPFLAGS) $(katana_CFLAGS) $(CFLAGS) -c -o katana-katana_config.obj `if test -f 'katana_config.c'; then $(CYGPATH_W) 'katana_config.c'; else $(CYGPATH_W) '$(srcdir)/katana_config.c'; fi`

katana-leb.o: leb.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(katana_CPPFLAGS) $(CPPFLAGS) $(katana_CFLAGS) $(CFLAGS) -MT katana-leb.o -MD -MP -MF $(DEPDIR)/katana-leb.Tpo -c -o katana-leb.o `test -f 'leb.c' || echo '$(srcdir)/'`leb.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/katana-leb.Tpo $(DEPDIR)/katana-leb.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='leb.c' object='katana-leb.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(katana_CPPFLAGS) $(CPPFLAGS) $(katana_CFLAGS) $(CFLAGS) -c -o katana-leb.o `test -f 'leb.c' || echo '$(srcdir)/'`leb.c

katana-leb.obj: leb.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(katana_CPPFLAGS) $(CPPFLAGS) $(katana_CFLAGS) $(CFLAGS) -MT katana-leb.obj -MD -MP -MF $(DEPDIR)/katana-leb.Tpo -c -o katana-leb.obj `if test -f 'leb.c'; then $(CYGPATH_W) 'leb.c'; else $(CYGPATH_W) '$(srcdir)/leb.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/katana-leb.Tpo $(DEPDIR)/katana-leb.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='leb.c' object='katana-leb.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(katana_CPPFLAGS) $(CPPFLAGS) $(katana_CFLAGS) $(CFLAGS) -c -o katana-leb.obj `if test -f 'leb.c'; then $(CYGPATH_W) 'leb.c'; else $(CYGPATH_W) '$(srcdir)/leb.c'; fi`

katana-callFrameInfo.o: callFrameInfo.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(katana_CPPFLAGS) $(CPPFLAGS) $(katana_CFLAGS) $(CFLAGS) -MT katana-callFrameInfo.o -MD -MP -MF $(DEPDIR)/katana-callFrameInfo.Tpo -c -o katana-callFrameInfo.o `test -f 'callFrameInfo.c' || echo '$(srcdir)/'`callFrameInfo.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/katana-callFrameInfo.Tpo $(DEPDIR)/katana-callFrameInfo.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='callFrameInfo.c' object='katana-callFrameInfo.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(katana_CPPFLAGS) $(CPPFLAGS) $(katana_CFLAGS) $(CFLAGS) -c -o katana-callFrameInfo.o `test -f 'callFrameInfo.c' || echo '$(srcdir)/'`callFrameInfo.c

katana-callFrameInfo.obj: callFrameInfo.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(katana_CPPFLAGS) $(CPPFLAGS) $(katana_CFLAGS) $(CFLAGS) -MT katana-callFrameInfo.obj -MD -MP -MF $(DEPDIR)/katana-callFrameInfo.Tpo -c -o katana-callFrameInfo.obj `if test -f 'callFrameInfo.c'; then $(CYGPATH_W) 'callFrameInfo.c'; else $(CYGPATH_W) '$(srcdir)/callFrameInfo.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/katana-callFrameInfo.Tpo $(DEPDIR)/katana-callFrameInfo.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='callFrameInfo.c' object='katana-callFrameInfo.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(katana_CPPFLAGS) $(CPPFLAGS) $(katana_CFLAGS) $(CFLAGS) -c -o katana-callFrameInfo.obj `if test -f 'callFrameInfo.c'; then $(CYGPATH_W) 'callFrameInfo.c'; else $(CYGPATH_W) '$(srcdir)/callFrameInfo.c'; fi`

katana-exceptTable.o: exceptTable.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(katana_CPPFLAGS) $(CPPFLAGS) $(katana_CFLAGS) $(CFLAGS) -MT katana-exceptTable.o -MD -MP -MF $(DEPDIR)/katana-exceptTable.Tpo -c -o katana-exceptTable.o `test -f 'exceptTable.c' || echo '$(srcdir)/'`exceptTable.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/katana-exceptTable.Tpo $(DEPDIR)/katana-exceptTable.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='exceptTable.c' object='katana-exceptTable.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(katana_CPPFLAGS) $(CPPFLAGS) $(katana_CFLAGS) $(CFLAGS) -c -o katana-exceptTable.o `test -f 'exceptTable.c' || echo '$(srcdir)/'`exceptTable.c

katana-exceptTable.obj: exceptTable.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(katana_CPPFLAGS) $(CPPFLAGS) $(katana_CFLAGS) $(CFLAGS) -MT katana-exceptTable.obj -MD -MP -MF $(DEPDIR)/katana-exceptTable.Tpo -c -o katana-exceptTable.obj `if test -f 'exceptTable.c'; then $(CYGPATH_W) 'exceptTable.c'; else $(CYGPATH_W) '$(srcdir)/exceptTable.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/katana-exceptTable.Tpo $(DEPDIR)/katana-exceptTable.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='exceptTable.c' object='katana-exceptTable.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(katana_CPPFLAGS) $(CPPFLAGS) $(katana_CFLAGS) $(CFLAGS) -c -o katana-exceptTable.obj `if test -f 'exceptTable.c'; then $(CYGPATH_W) 'exceptTable.c'; else $(CYGPATH_W) '$(srcdir)/exceptTable.c'; fi`

katana-commandLine.o: commandLine.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(katana_CPPFLAGS) $(CPPFLAGS) $(katana_CFLAGS) $(CFLAGS) -MT katana-commandLine.o -MD -MP -MF $(DEPDIR)/katana-commandLine.Tpo -c -o katana-commandLine.o `test -f 'commandLine.c' || echo '$(srcdir)/'`commandLine.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/katana-commandLine.Tpo $(DEPDIR)/katana-commandLine.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='commandLine.c' object='katana-commandLine.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(katana_CPPFLAGS) $(CPPFLAGS) $(katana_CFLAGS) $(CFLAGS) -c -o katana-commandLine.o `test -f 'commandLine.c' || echo '$(srcdir)/'`commandLine.c

katana-commandLine.obj: commandLine.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(katana_CPPFLAGS) $(CPPFLAGS) $(katana_CFLAGS) $(CFLAGS) -MT katana-commandLine.obj -MD -MP -MF $(DEPDIR)/katana-commandLine.Tpo -c -o katana-commandLine.obj `if test -f 'commandLine.c'; then $(CYGPATH_W) 'commandLine.c'; else $(CYGPATH_W) '$(srcdir)/commandLine.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/katana-commandLine.Tpo $(DEPDIR)/katana-commandLine.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='commandLine.c' object='katana-commandLine.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(katana_CPPFLAGS) $(CPPFLAGS) $(katana_CFLAGS) $(CFLAGS) -c -o katana-commandLine.obj `if test -f 'commandLine.c'; then $(CYGPATH_W) 'commandLine.c'; else $(CYGPATH_W) '$(srcdir)/commandLine.c'; fi`

katana-elfwriter.o: elfwriter.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(katana_CPPFLAGS) $(CPPFLAGS) $(katana_CFLAGS) $(CFLAGS) -MT katana-elfwriter.o -MD -MP -MF $(DEPDIR)/katana-elfwriter.Tpo -c -o katana-elfwriter.o `test -f 'elfwriter.c' || echo '$(srcdir)/'`elfwriter.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/katana-elfwriter.Tpo $(DEPDIR)/katana-elfwriter.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='elfwriter.c' object='katana-elfwriter.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(katana_CPPFLAGS) $(CPPFLAGS) $(katana_CFLAGS) $(CFLAGS) -c -o katana-elfwriter.o `test -f 'elfwriter.c' || echo '$(srcdir)/'`elfwriter.c

katana-elfwriter.obj: elfwriter.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(katana_CPPFLAGS) $(CPPFLAGS) $(katana_CFLAGS) $(CFLAGS) -MT katana-elfwriter.obj -MD -MP -MF $(DEPDIR)/katana-elfwriter.Tpo -c -o katana-elfwriter.obj `if test -f 'elfwriter.c'; then $(CYGPATH_W) 'elfwriter.c'; else $(CYGPATH_W) '$(srcdir)/elfwriter.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/katana-elfwriter.Tpo $(DEPDIR)/katana-elfwriter.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='elfwriter.c' object='katana-elfwriter.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(katana_CPPFLAGS) $(CPPFLAGS) $(katana_CFLAGS) $(CFLAGS) -c -o katana-elfwriter.obj `if test -f 'elfwriter.c'; then $(CYGPATH_W) 'elfwriter.c'; else $(CYGPATH_W) '$(srcdir)/elfwriter.c'; fi`

katana-eh_pe.o: eh_pe.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(katana_CPPFLAGS) $(CPPFLAGS) $(katana_CFLAGS) $(CFLAGS) -MT katana-eh_pe.o -MD -MP -MF $(DEPDIR)/katana-eh_pe.Tpo -c -o katana-eh_pe.o `test -f 'eh_pe.c' || echo '$(srcdir)/'`eh_pe.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/katana-eh_pe.Tpo $(DEPDIR)/katana-eh_pe.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='eh_pe.c' object='katana-eh_pe.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(katana_CPPFLAGS) $(CPPFLAGS) $(katana_CFLAGS) $(CFLAGS) -c -o katana-eh_pe.o `test -f 'eh_pe.c' || echo '$(srcdir)/'`eh_pe.c

katana-eh_pe.obj: eh_pe.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(katana_CPPFLAGS) $(CPPFLAGS) $(katana_CFLAGS) $(CFLAGS) -MT katana-eh_pe.obj -MD -MP -MF $(DEPDIR)/katana-eh_pe.Tpo -c -o katana-eh_pe.obj `if test -f 'eh_pe.c'; then $(CYGPATH_W) 'eh_pe.c'; else $(CYGPATH_W) '$(srcdir)/eh_pe.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/katana-eh_pe.Tpo $(DEPDIR)/katana-eh_pe.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='eh_pe.c' object='katana-eh_pe.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(katana_CPPFLAGS) $(CPPFLAGS) $(katana_CFLAGS) $(CFLAGS) -c -o katana-eh_pe.obj `if test -f 'eh_pe.c'; then $(CYGPATH_W) 'eh_pe.c'; else $(CYGPATH_W) '$(srcdir)/eh_pe.c'; fi`

patchwrite/katana-patchwrite.o: patchwrite/patchwrite.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(katana_CPPFLAGS) $(CPPFLAGS) $(katana_CFLAGS) $(CFLAGS) -MT patchwrite/katana-patchwrite.o -MD -MP -MF patchwrite/$(DEPDIR)/katana-patchwrite.Tpo -c -o patchwrite/katana-patchwrite.o `test -f 'patchwrite/patchwrite.c' || echo '$(srcdir)/'`patchwrite/patchwrite.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) patchwrite/$(DEPDIR)/katana-patchwrite.Tpo patchwrite/$(DEPDIR)/katana-patchwrite.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='patchwrite/patchwrite.c' object='patchwrite/katana-patchwrite.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(katana_CPPFLAGS) $(CPPFLAGS) $(katana_CFLAGS) $(CFLAGS) -c -o patchwrite/katana-patchwrite.o `test -f 'patchwrite/patchwrite.c' || echo '$(srcdir)/'`patchwrite/patchwrite.c

patchwrite/katana-patchwrite.obj: patchwrite/patchwrite.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(katana_CPPFLAGS) $(CPPFLAGS) $(katana_CFLAGS) $(CFLAGS) -MT patchwrite/katana-patchwrite.obj -MD -MP -MF patchwrite/$(DEPDIR)/katana-patchwrite.Tpo -c -o patchwrite/katana-patchwrite.obj `if test -f 'patchwrite/patchwrite.c'; then $(CYGPATH_W) 'patchwrite/patchwrite.c'; else $(CYGPATH_W) '$(srcdir)/patchwrite/patchwrite.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) patchwrite/$(DEPDIR)/katana-patchwrite.Tpo patchwrite/$(DEPDIR)/katana-patchwrite.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='patchwrite/patchwrite.c' object='patchwrite/katana-patchwrite.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(katana_CPPFLAGS) $(CPPFLAGS) $(katana_CFLAGS) $(CFLAGS) -c -o patchwrite/katana-patchwrite.obj `if test -f 'patchwrite/patchwrite.c'; then $(CYGPATH_W) 'patchwrite/patchwrite.c'; else $(CYGPATH_W) '$(srcdir)/patchwrite/patchwrite.c'; fi`

patchwrite/katana-codediff.o: patchwrite/codediff.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(katana_CPPFLAGS) $(CPPFLAGS) $(katana_CFLAGS) $(CFLAGS) -MT patchwrite/katana-codediff.o -MD -MP -MF patchwrite/$(DEPDIR)/katana-codediff.Tpo -c -o patchwrite/katana-codediff.o `test -f 'patchwrite/codediff.c' || echo '$(srcdir)/'`patchwrite/codediff.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) patchwrite/$(DEPDIR)/katana-codediff.Tpo patchwrite/$(DEPDIR)/katana-codediff.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='patchwrite/codediff.c' object='patchwrite/katana-codediff.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(katana_CPPFLAGS) $(CPPFLAGS) $(katana_CFLAGS) $(CFLAGS) -c -o patchwrite/katana-codediff.o `test -f 'patchwrite/codediff.c' || echo '$(srcdir)/'`patchwrite/codediff.c

patchwrite/katana-codediff.obj: patchwrite/codediff.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(katana_CPPFLAGS) $(CPPFLAGS) $(katana_CFLAGS) $(CFLAGS) -MT patchwrite/katana-codediff.obj -MD -MP -MF patchwrite/$(DEPDIR)/katana-codediff.Tpo -c -o patchwrite/katana-codediff.obj `if test -f 'patchwrite/codediff.c'; then $(CYGPATH_W) 'patchwrite/codediff.c'; else $(CYGPATH_W) '$(srcdir)/patchwrite/codediff.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) patchwrite/$(DEPDIR)/katana-codediff.Tpo patchwrite/$(DEPDIR)/katana-codediff.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='patchwrite/codediff.c' object='patchwrite/katana-codediff.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(katana_CPPFLAGS) $(CPPFLAGS) $(katana_CFLAGS) $(CFLAGS) -c -o patchwrite/katana-codediff.obj `if test -f 'patchwrite/codediff.c'; then $(CYGPATH_W) 'patchwrite/codediff.c'; else $(CYGPATH_W) '$(srcdir)/patchwrite/codediff.c'; fi`

patchwrite/katana-typediff.o: patchwrite/typediff.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(katana_CPPFLAGS) $(CPPFLAGS) $(katana_CFLAGS) $(CFLAGS) -MT patchwrite/katana-typediff.o -MD -MP -MF patchwrite/$(DEPDIR)/katana-typediff.Tpo -c -o patchwrite/katana-typediff.o `test -f 'patchwrite/typediff.c' || echo '$(srcdir)/'`patchwrite/typediff.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) patchwrite/$(DEPDIR)/katana-typediff.Tpo patchwrite/$(DEPDIR)/katana-typediff.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='patchwrite/typediff.c' object='patchwrite/katana-typediff.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(katana_CPPFLAGS) $(CPPFLAGS) $(katana_CFLAGS) $(CFLAGS) -c -o patchwrite/katana-typediff.o `test -f 'patchwrite/typediff.c' || echo '$(srcdir)/'`patchwrite/typediff.c

patchwrite/katana-typediff.obj: patchwrite/typediff.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(katana_CPPFLAGS) $(CPPFLAGS) $(katana_CFLAGS) $(CFLAGS) -MT patchwrite/katana-typediff.obj -MD -MP -MF patchwrite/$(DEPDIR)/katana-typediff.Tpo -c -o patchwrite/katana-typediff.obj `if test -f 'patchwrite/typediff.c'; then $(CYGPATH_W) 'patchwrite/typediff.c'; else $(CYGPATH_W) '$(srcdir)/patchwrite/typediff.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) patchwrite/$(DEPDIR)/katana-typediff.Tpo patchwrite/$(DEPDIR)/katana-typediff.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='patchwrite/typediff.c' object='patchwrite/katana-typediff.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(katana_CPPFLAGS) $(CPPFLAGS) $(katana_CFLAGS) $(CFLAGS) -c -o patchwrite/katana-typediff.obj `if test -f 'patchwrite/typediff.c'; then $(CYGPATH_W) 'patchwrite/typediff.c'; else $(CYGPATH_W) '$(srcdir)/patchwrite/typediff.c'; fi`

patchwrite/katana-sourcetree.o: patchwrite/sourcetree.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(katana_CPPFLAGS) $(CPPFLAGS) $(katana_CFLAGS) $(CFLAGS) -MT patchwrite/katana-sourcetree.o -MD -MP -MF patchwrite/$(DEPDIR)/katana-sourcetree.Tpo -c -o patchwrite/katana-sourcetree.o `test -f 'patchwrite/sourcetree.c' || echo '$(srcdir)/'`patchwrite/sourcetree.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) patchwrite/$(DEPDIR)/katana-sourcetree.Tpo patchwrite/$(DEPDIR)/katana-sourcetree.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='patchwrite/sourcetree.c' object='patchwrite/katana-sourcetree.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(katana_CPPFLAGS) $(CPPFLAGS) $(katana_CFLAGS) $(CFLAGS) -c -o patchwrite/katana-sourcetree.o `test -f 'patchwrite/sourcetree.c' || echo '$(srcdir)/'`patchwrite/sourcetree.c

patchwrite/katana-sourcetree.obj: patchwrite/sourcetree.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(katana_CPPFLAGS) $(CPPFLAGS) $(katana_CFLAGS) $(CFLAGS) -MT patchwrite/katana-sourcetree.obj -MD -MP -MF patchwrite/$(DEPDIR)/katana-sourcetree.Tpo -c -o patchwrite/katana-sourcetree.obj `if test -f 'patchwrite/sourcetree.c'; then $(CYGPATH_W) 'patchwrite/sourcetree.c'; else $(CYGPATH_W) '$(srcdir)/patchwrite/sourcetree.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) patchwrite/$(DEPDIR)/katana-sourcetree.Tpo patchwrite/$(DEPDIR)/katana-sourcetree.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='patchwrite/sourcetree.c' object='patchwrite/katana-sourcetree.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(katana_CPPFLAGS) $(CPPFLAGS) $(katana_CFLAGS) $(CFLAGS) -c -o patchwrite/katana-sourcetree.obj `if test -f 'patchwrite/sourcetree.c'; then $(CYGPATH_W) 'patchwrite/sourcetree.c'; else $(CYGPATH_W) '$(srcdir)/patchwrite/sourcetree.c'; fi`

patchwrite/katana-write_to_dwarf.o: patchwrite/write_to_dwarf.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(katana_CPPFLAGS) $(CPPFLAGS) $(katana_CFLAGS) $(CFLAGS) -MT patchwrite/katana-write_to_dwarf.o -MD -MP -MF patchwrite/$(DEPDIR)/katana-write_to_dwarf.Tpo -c -o patchwrite/katana-write_to_dwarf.o `test -f 'patchwrite/write_to_dwarf.c' || echo '$(srcdir)/'`patchwrite/write_to_dwarf.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) patchwrite/$(DEPDIR)/katana-write_to_dwarf.Tpo patchwrite/$(DEPDIR)/katana-write_to_dwarf.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='patchwrite/write_to_dwarf.c' object='patchwrite/katana-write_to_dwarf.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(katana_CPPFLAGS) $(CPPFLAGS) $(katana_CFLAGS) $(CFLAGS) -c -o patchwrite/katana-write_to_dwarf.o `test -f 'patchwrite/write_to_dwarf.c' || echo '$(srcdir)/'`patchwrite/write_to_dwarf.c

patchwrite/katana-write_to_dwarf.obj: patchwrite/write_to_dwarf.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(katana_CPPFLAGS) $(CPPFLAGS) $(katana_CFLAGS) $(CFLAGS) -MT patchwrite/katana-write_to_dwarf.obj -MD -MP -MF patchwrite/$(DEPDIR)/katana-write_to_dwarf.Tpo -c -o patchwrite/katana-write_to_dwarf.obj `if test -f 'patchwrite/write_to_dwarf.c'; then $(CYGPATH_W) 'patchwrite/write_to_dwarf.c'; else $(CYGPATH_W) '$(srcdir)/patchwrite/write_to_dwarf.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) patchwrite/$(DEPDIR)/katana-write_to_dwarf.Tpo patchwrite/$(DEPDIR)/katana-write_to_dwarf.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='patchwrite/write_to_dwarf.c' object='patchwrite/katana-write_to_dwarf.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(katana_CPPFLAGS) $(CPPFLAGS) $(katana_CFLAGS) $(CFLAGS) -c -o patchwrite/katana-write_to_dwarf.obj `if test -f 'patchwrite/write_to_dwarf.c'; then $(CYGPATH_W) 'patchwrite/write_to_dwarf.c'; else $(CYGPATH_W) '$(srcdir)/patchwrite/write_to_dwarf.c'; fi`

patchwrite/katana-elfcmp.o: patchwrite/elfcmp.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(katana_CPPFLAGS) $(CPPFLAGS) $(katana_CFLAGS) $(CFLAGS) -MT patchwrite/katana-elfcmp.o -MD -MP -MF patchwrite/$(DEPDIR)/katana-elfcmp.Tpo -c -o patchwrite/katana-elfcmp.o `test -f 'patchwrite/elfcmp.c' || echo '$(srcdir)/'`patchwrite/elfcmp.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) patchwrite/$(DEPDIR)/katana-elfcmp.Tpo patchwrite/$(DEPDIR)/katana-elfcmp.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='patchwrite/elfcmp.c' object='patchwrite/katana-elfcmp.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(katana_CPPFLAGS) $(CPPFLAGS) $(katana_CFLAGS) $(CFLAGS) -c -o patchwrite/katana-elfcmp.o `test -f 'patchwrite/elfcmp.c' || echo '$(srcdir)/'`patchwrite/elfcmp.c

patchwrite/katana-elfcmp.obj: patchwrite/elfcmp.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(katana_CPPFLAGS) $(CPPFLAGS) $(katana_CFLAGS) $(CFLAGS) -MT patchwrite/katana-elfcmp.obj -MD -MP -MF patchwrite/$(DEPDIR)/katana-elfcmp.Tpo -c -o patchwrite/katana-elfcmp.obj `if test -f 'patchwrite/elfcmp.c'; then $(CYGPATH_W) 'patchwrite/elfcmp.c'; else $(CYGPATH_W) '$(srcdir)/patchwrite/elfcmp.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) patchwrite/$(DEPDIR)/katana-elfcmp.Tpo patchwrite/$(DEPDIR)/katana-elfcmp.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='patchwrite/elfcmp.c' object='patchwrite/katana-elfcmp.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(katana_CPPFLAGS) $(CPPFLAGS) $(katana_CFLAGS) $(CFLAGS) -c -o patchwrite/katana-elfcmp.obj `if test -f 'patchwrite/elfcmp.c'; then $(CYGPATH_W) 'patchwrite/elfcmp.c'; else $(CYGPATH_W) '$(srcdir)/patchwrite/elfcmp.c'; fi`

patcher/katana-hotpatch.o: patcher/hotpatch.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(katana_CPPFLAGS) $(CPPFLAGS) $(katana_CFLAGS) $(CFLAGS) -MT patcher/katana-hotpatch.o -MD -MP -MF patcher/$(DEPDIR)/katana-hotpatch.Tpo -c -o patcher/katana-hotpatch.o `test -f 'patcher/hotpatch.c' || echo '$(srcdir)/'`patcher/hotpatch.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) patcher/$(DEPDIR)/katana-hotpatch.Tpo patcher/$(DEPDIR)/katana-hotpatch.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='patcher/hotpatch.c' object='patcher/katana-hotpatch.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(katana_CPPFLAGS) $(CPPFLAGS) $(katana_CFLAGS) $(CFLAGS) -c -o patcher/katana-hotpatch.o `test -f 'patcher/hotpatch.c' || echo '$(srcdir)/'`patcher/hotpatch.c

patcher/katana-hotpatch.obj: patcher/hotpatch.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(katana_CPPFLAGS) $(CPPFLAGS) $(katana_CFLAGS) $(CFLAGS) -MT patcher/katana-hotpatch.obj -MD -MP -MF patcher/$(DEPDIR)/katana-hotpatch.Tpo -c -o patcher/katana-hotpatch.obj `if test -f 'patcher/hotpatch.c'; then $(CYGPATH_W) 'patcher/hotpatch.c'; else $(CYGPATH_W) '$(srcdir)/patcher/hotpatch.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) patcher/$(DEPDIR)/katana-hotpatch.Tpo patcher/$(DEPDIR)/katana-hotpatch.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='patcher/hotpatch.c' object='patcher/katana-hotpatch.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(katana_CPPFLAGS) $(CPPFLAGS) $(katana_CFLAGS) $(CFLAGS) -c -o patcher/katana-hotpatch.obj `if test -f 'patcher/hotpatch.c'; then $(CYGPATH_W) 'patcher/hotpatch.c'; else $(CYGPATH_W) '$(srcdir)/patcher/hotpatch.c'; fi`

patcher/katana-target.o: patcher/target.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(katana_CPPFLAGS) $(CPPFLAGS) $(katana_CFLAGS) $(CFLAGS) -MT patcher/katana-target.o -MD -MP -MF patcher/$(DEPDIR)/katana-target.Tpo -c -o patcher/katana-target.o `test -f 'patcher/target.c' || echo '$(srcdir)/'`patcher/target.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) patcher/$(DEPDIR)/katana-target.Tpo patcher/$(DEPDIR)/katana-target.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='patcher/target.c' object='patcher/katana-target.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(katana_CPPFLAGS) $(CPPFLAGS) $(katana_CFLAGS) $(CFLAGS) -c -o patcher/katana-target.o `test -f 'patcher/target.c' || echo '$(srcdir)/'`patcher/target.c

patcher/katana-target.obj: patcher/target.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(katana_CPPFLAGS) $(CPPFLAGS) $(katana_CFLAGS) $(CFLAGS) -MT patcher/katana-target.obj -MD -MP -MF patcher/$(DEPDIR)/katana-target.Tpo -c -o patcher/katana-target.obj `if test -f 'patcher/target.c'; then $(CYGPATH_W) 'patcher/target.c'; else $(CYGPATH_W) '$(srcdir)/patcher/target.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) patcher/$(DEPDIR)/katana-target.Tpo patcher/$(DEPDIR)/katana-target.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='patcher/target.c' object='patcher/katana-target.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(katana_CPPFLAGS) $(CPPFLAGS) $(katana_CFLAGS) $(CFLAGS) -c -o patcher/katana-target.obj `if test -f 'patcher/target.c'; then $(CYGPATH_W) 'patcher/target.c'; else $(CYGPATH_W) '$(srcdir)/patcher/target.c'; fi`

patcher/katana-patchapply.o: patcher/patchapply.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(katana_CPPFLAGS) $(CPPFLAGS) $(katana_CFLAGS) $(CFLAGS) -MT patcher/katana-patchapply.o -MD -MP -MF patcher/$(DEPDIR)/katana-patchapply.Tpo -c -o patcher/katana-patchapply.o `test -f 'patcher/patchapply.c' || echo '$(srcdir)/'`patcher/patchapply.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) patcher/$(DEPDIR)/katana-patchapply.Tpo patcher/$(DEPDIR)/katana-patchapply.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='patcher/patchapply.c' object='patcher/katana-patchapply.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(katana_CPPFLAGS) $(CPPFLAGS) $(katana_CFLAGS) $(CFLAGS) -c -o patcher/katana-patchapply.o `test -f 'patcher/patchapply.c' || echo '$(srcdir)/'`patcher/patchapply.c

patcher/katana-patchapply.obj: patcher/patchapply.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(katana_CPPFLAGS) $(CPPFLAGS) $(katana_CFLAGS) $(CFLAGS) -MT patcher/katana-patchapply.obj -MD -MP -MF patcher/$(DEPDIR)/katana-patchapply.Tpo -c -o patcher/katana-patchapply.obj `if test -f 'patcher/patchapply.c'; then $(CYGPATH_W) 'patcher/patchapply.c'; else $(CYGPATH_W) '$(srcdir)/patcher/patchapply.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) patcher/$(DEPDIR)/katana-patchapply.Tpo patcher/$(DEPDIR)/katana-patchapply.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='patcher/patchapply.c' object='patcher/katana-patchapply.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(katana_CPPFLAGS) $(CPPFLAGS) $(katana_CFLAGS) $(CFLAGS) -c -o patcher/katana-patchapply.obj `if test -f 'patcher/patchapply.c'; then $(CYGPATH_W) 'patcher/patchapply.c'; else $(CYGPATH_W) '$(srcdir)/patcher/patchapply.c'; fi`

patcher/katana-versioning.o: patcher/versioning.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(katana_CPPFLAGS) $(CPPFLAGS) $(katana_CFLAGS) $(CFLAGS) -MT patcher/katana-versioning.o -MD -MP -MF patcher/$(DEPDIR)/katana-versioning.Tpo -c -o patcher/katana-versioning.o `test -f 'patcher/versioning.c' || echo '$(srcdir)/'`patcher/versioning.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) patcher/$(DEPDIR)/katana-versioning.Tpo patcher/$(DEPDIR)/katana-versioning.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='patcher/versioning.c' object='patcher/katana-versioning.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(katana_CPPFLAGS) $(CPPFLAGS) $(katana_CFLAGS) $(CFLAGS) -c -o patcher/katana-versioning.o `test -f 'patcher/versioning.c' || echo '$(srcdir)/'`patcher/versioning.c

patcher/katana-versioning.obj: patcher/versioning.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(katana_CPPFLAGS) $(CPPFLAGS) $(katana_CFLAGS) $(CFLAGS) -MT patcher/katana-versioning.obj -MD -MP -MF patcher/$(DEPDIR)/katana-versioning.Tpo -c -o patcher/katana-versioning.obj `if test -f 'patcher/versioning.c'; then $(CYGPATH_W) 'patcher/versioning.c'; else $(CYGPATH_W) '$(srcdir)/patcher/versioning.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) patcher/$(DEPDIR)/katana-versioning.Tpo patcher/$(DEPDIR)/katana-versioning.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='patcher/versioning.c' object='patcher/katana-versioning.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(katana_CPPFLAGS) $(CPPFLAGS) $(katana_CFLAGS) $(CFLAGS) -c -o patcher/katana-versioning.obj `if test -f 'patcher/versioning.c'; then $(CYGPATH_W) 'patcher/versioning.c'; else $(CYGPATH_W) '$(srcdir)/patcher/versioning.c'; fi`

patcher/katana-linkmap.o: patcher/linkmap.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(katana_CPPFLAGS) $(CPPFLAGS) $(katana_CFLAGS) $(CFLAGS) -MT patcher/katana-linkmap.o -MD -MP -MF patcher/$(DEPDIR)/katana-linkmap.Tpo -c -o patcher/katana-linkmap.o `test -f 'patcher/linkmap.c' || echo '$(srcdir)/'`patcher/linkmap.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) patcher/$(DEPDIR)/katana-linkmap.Tpo patcher/$(DEPDIR)/katana-linkmap.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='patcher/linkmap.c' object='patcher/katana-linkmap.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(katana_CPPFLAGS) $(CPPFLAGS) $(katana_CFLAGS) $(CFLAGS) -c -o patcher/katana-linkmap.o `test -f 'patcher/linkmap.c' || echo '$(srcdir)/'`patcher/linkmap.c

patcher/katana-linkmap.obj: patcher/linkmap.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(katana_CPPFLAGS) $(CPPFLAGS) $(katana_CFLAGS) $(CFLAGS) -MT patcher/katana-linkmap.obj -MD -MP -MF patcher/$(DEPDIR)/katana-linkmap.Tpo -c -o patcher/katana-linkmap.obj `if test -f 'patcher/linkmap.c'; then $(CYGPATH_W) 'patcher/linkmap.c'; else $(CYGPATH_W) '$(srcdir)/patcher/linkmap.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) patcher/$(DEPDIR)/katana-linkmap.Tpo patcher/$(DEPDIR)/katana-linkmap.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='patcher/linkmap.c' object='patcher/katana-linkmap.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(katana_CPPFLAGS) $(CPPFLAGS) $(katana_CFLAGS) $(CFLAGS) -c -o patcher/katana-linkmap.obj `if test -f 'patcher/linkmap.c'; then $(CYGPATH_W) 'patcher/linkmap.c'; else $(CYGPATH_W) '$(srcdir)/patcher/linkmap.c'; fi`

patcher/katana-safety.o: patcher/safety.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(katana_CPPFLAGS) $(CPPFLAGS) $(katana_CFLAGS) $(CFLAGS) -MT patcher/katana-safety.o -MD -MP -MF patcher/$(DEPDIR)/katana-safety.Tpo -c -o patcher/katana-safety.o `test -f 'patcher/safety.c' || echo '$(srcdir)/'`patcher/safety.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) patcher/$(DEPDIR)/katana-safety.Tpo patcher/$(DEPDIR)/katana-safety.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='patcher/safety.c' object='patcher/katana-safety.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(katana_CPPFLAGS) $(CPPFLAGS) $(katana_CFLAGS) $(CFLAGS) -c -o patcher/katana-safety.o `test -f 'patcher/safety.c' || echo '$(srcdir)/'`patcher/safety.c

patcher/katana-safety.obj: patcher/safety.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(katana_CPPFLAGS) $(CPPFLAGS) $(katana_CFLAGS) $(CFLAGS) -MT patcher/katana-safety.obj -MD -MP -MF patcher/$(DEPDIR)/katana-safety.Tpo -c -o patcher/katana-safety.obj `if test -f 'patcher/safety.c'; then $(CYGPATH_W) 'patcher/safety.c'; else $(CYGPATH_W) '$(srcdir)/patcher/safety.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) patcher/$(DEPDIR)/katana-safety.Tpo patcher/$(DEPDIR)/katana-safety.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='patcher/safety.c' object='patcher/katana-safety.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(katana_CPPFLAGS) $(CPPFLAGS) $(katana_CFLAGS) $(CFLAGS) -c -o patcher/katana-safety.obj `if test -f 'patcher/safety.c'; then $(CYGPATH_W) 'patcher/safety.c'; else $(CYGPATH_W) '$(srcdir)/patcher/safety.c'; fi`

patcher/katana-pmap.o: patcher/pmap.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(katana_CPPFLAGS) $(CPPFLAGS) $(katana_CFLAGS) $(CFLAGS) -MT patcher/katana-pmap.o -MD -MP -MF patcher/$(DEPDIR)/katana-pmap.Tpo -c -o patcher/katana-pmap.o `test -f 'patcher/pmap.c' || echo '$(srcdir)/'`patcher/pmap.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) patcher/$(DEPDIR)/katana-pmap.Tpo patcher/$(DEPDIR)/katana-pmap.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='patcher/pmap.c' object='patcher/katana-pmap.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(katana_CPPFLAGS) $(CPPFLAGS) $(katana_CFLAGS) $(CFLAGS) -c -o patcher/katana-pmap.o `test -f 'patcher/pmap.c' || echo '$(srcdir)/'`patcher/pmap.c

patcher/katana-pmap.obj: patcher/pmap.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(katana_CPPFLAGS) $(CPPFLAGS) $(katana_CFLAGS) $(CFLAGS) -MT patcher/katana-pmap.obj -MD -MP -MF patcher/$(DEPDIR)/katana-pmap.Tpo -c -o patcher/katana-pmap.obj `if test -f 'patcher/pmap.c'; then $(CYGPATH_W) 'patcher/pmap.c'; else $(CYGPATH_W) '$(srcdir)/patcher/pmap.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) patcher/$(DEPDIR)/katana-pmap.Tpo patcher/$(DEPDIR)/katana-pmap.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='patcher/pmap.c' object='patcher/katana-pmap.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(katana_CPPFLAGS) $(CPPFLAGS) $(katana_CFLAGS) $(CFLAGS) -c -o patcher/katana-pmap.obj `if test -f 'patcher/pmap.c'; then $(CYGPATH_W) 'patcher/pmap.c'; else $(CYGPATH_W) '$(srcdir)/patcher/pmap.c'; fi`

util/katana-dictionary.o: util/dictionary.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(katana_CPPFLAGS) $(CPPFLAGS) $(katana_CFLAGS) $(CFLAGS) -MT util/katana-dictionary.o -MD -MP -MF util/$(DEPDIR)/katana-dictionary.Tpo -c -o util/katana-dictionary.o `test -f 'util/dictionary.c' || echo '$(srcdir)/'`util/dictionary.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) util/$(DEPDIR)/katana-dictionary.Tpo util/$(DEPDIR)/katana-dictionary.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='util/dictionary.c' object='util/katana-dictionary.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(katana_CPPFLAGS) $(CPPFLAGS) $(katana_CFLAGS) $(CFLAGS) -c -o util/katana-dictionary.o `test -f 'util/dictionary.c' || echo '$(srcdir)/'`util/dictionary.c

util/katana-dictionary.obj: util/dictionary.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(katana_CPPFLAGS) $(CPPFLAGS) $(katana_CFLAGS) $(CFLAGS) -MT util/katana-dictionary.obj -MD -MP -MF util/$(DEPDIR)/katana-dictionary.Tpo -c -o util/katana-dictionary.obj `if test -f 'util/dictionary.c'; then $(CYGPATH_W) 'util/dictionary.c'; else $(CYGPATH_W) '$(srcdir)/util/dictionary.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) util/$(DEPDIR)/katana-dictionary.Tpo util/$(DEPDIR)/katana-dictionary.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='util/dictionary.c' object='util/katana-dictionary.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(katana_CPPFLAGS) $(CPPFLAGS) $(katana_CFLAGS) $(CFLAGS) -c -o util/katana-dictionary.obj `if test -f 'util/dictionary.c'; then $(CYGPATH_W) 'util/dictionary.c'; else $(CYGPATH_W) '$(srcdir)/util/dictionary.c'; fi`

util/katana-hash.o: util/hash.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(katana_CPPFLAGS) $(CPPFLAGS) $(katana_CFLAGS) $(CFLAGS) -MT util/katana-hash.o -MD -MP -MF util/$(DEPDIR)/katana-hash.Tpo -c -o util/katana-hash.o `test -f 'util/hash.c' || echo '$(srcdir)/'`util/hash.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) util/$(DEPDIR)/katana-hash.Tpo util/$(DEPDIR)/katana-hash.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='util/hash.c' object='util/katana-hash.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(katana_CPPFLAGS) $(CPPFLAGS) $(katana_CFLAGS) $(CFLAGS) -c -o util/katana-hash.o `test -f 'util/hash.c' || echo '$(srcdir)/'`util/hash.c

util/katana-hash.obj: util/hash.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(katana_CPPFLAGS) $(CPPFLAGS) $(katana_CFLAGS) $(CFLAGS) -MT util/katana-hash.obj -MD -MP -MF util/$(DEPDIR)/katana-hash.Tpo -c -o util/katana-hash.obj `if test -f 'util/hash.c'; then $(CYGPATH_W) 'util/hash.c'; else $(CYGPATH_W) '$(srcdir)/util/hash.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) util/$(DEPDIR)/katana-hash.Tpo util/$(DEPDIR)/katana-hash.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='util/hash.c' object='util/katana-hash.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(katana_CPPFLAGS) $(CPPFLAGS) $(katana_CFLAGS) $(CFLAGS) -c -o util/katana-hash.obj `if test -f 'util/hash.c'; then $(CYGPATH_W) 'util/hash.c'; else $(CYGPATH_W) '$(srcdir)/util/hash.c'; fi`

util/katana-util.o: util/util.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(katana_CPPFLAGS) $(CPPFLAGS) $(katana_CFLAGS) $(CFLAGS) -MT util/katana-util.o -MD -MP -MF util/$(DEPDIR)/katana-util.Tpo -c -o util/katana-util.o `test -f 'util/util.c' || echo '$(srcdir)/'`util/util.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) util/$(DEPDIR)/katana-util.Tpo util/$(DEPDIR)/katana-util.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='util/util.c' object='util/katana-util.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(katana_CPPFLAGS) $(CPPFLAGS) $(katana_CFLAGS) $(CFLAGS) -c -o util/katana-util.o `test -f 'util/util.c' || echo '$(srcdir)/'`util/util.c

util/katana-util.obj: util/util.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(katana_CPPFLAGS) $(CPPFLAGS) $(katana_CFLAGS) $(CFLAGS) -MT util/katana-util.obj -MD -MP -MF util/$(DEPDIR)/katana-util.Tpo -c -o util/katana-util.obj `if test -f 'util/util.c'; then $(CYGPATH_W) 'util/util.c'; else $(CYGPATH_W) '$(srcdir)/util/util.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) util/$(DEPDIR)/katana-util.Tpo util/$(DEPDIR)/katana-util.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='util/util.c' object='util/katana-util.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(katana_CPPFLAGS) $(CPPFLAGS) $(katana_CFLAGS) $(CFLAGS) -c -o util/katana-util.obj `if test -f 'util/util.c'; then $(CYGPATH_W) 'util/util.c'; else $(CYGPATH_W) '$(srcdir)/util/util.c'; fi`

util/katana-map.o: util/map.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(katana_CPPFLAGS) $(CPPFLAGS) $(katana_CFLAGS) $(CFLAGS) -MT util/katana-map.o -MD -MP -MF util/$(DEPDIR)/katana-map.Tpo -c -o util/katana-map.o `test -f 'util/map.c' || echo '$(srcdir)/'`util/map.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) util/$(DEPDIR)/katana-map.Tpo util/$(DEPDIR)/katana-map.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='util/map.c' object='util/katana-map.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(katana_CPPFLAGS) $(CPPFLAGS) $(katana_CFLAGS) $(CFLAGS) -c -o util/katana-map.o `test -f 'util/map.c' || echo '$(srcdir)/'`util/map.c

util/katana-map.obj: util/map.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(katana_CPPFLAGS) $(CPPFLAGS) $(katana_CFLAGS) $(CFLAGS) -MT util/katana-map.obj -MD -MP -MF util/$(DEPDIR)/katana-map.Tpo -c -o util/katana-map.obj `if test -f 'util/map.c'; then $(CYGPATH_W) 'util/map.c'; else $(CYGPATH_W) '$(srcdir)/util/map.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) util/$(DEPDIR)/katana-map.Tpo util/$(DEPDIR)/katana-map.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='util/map.c' object='util/katana-map.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(katana_CPPFLAGS) $(CPPFLAGS) $(katana_CFLAGS) $(CFLAGS) -c -o util/katana-map.obj `if test -f 'util/map.c'; then $(CYGPATH_W) 'util/map.c'; else $(CYGPATH_W) '$(srcdir)/util/map.c'; fi`

util/katana-list.o: util/list.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(katana_CPPFLAGS) $(CPPFLAGS) $(katana_CFLAGS) $(CFLAGS) -MT util/katana-list.o -MD -MP -MF util/$(DEPDIR)/katana-list.Tpo -c -o util/katana-list.o `test -f 'util/list.c' || echo '$(srcdir)/'`util/list.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) util/$(DEPDIR)/katana-list.Tpo util/$(DEPDIR)/katana-list.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='util/list.c' object='util/katana-list.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(katana_CPPFLAGS) $(CPPFLAGS) $(katana_CFLAGS) $(CFLAGS) -c -o util/katana-list.o `test -f 'util/list.c' || echo '$(srcdir)/'`util/list.c

util/katana-list.obj: util/list.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(katana_CPPFLAGS) $(CPPFLAGS) $(katana_CFLAGS) $(CFLAGS) -MT util/katana-list.obj -MD -MP -MF util/$(DEPDIR)/katana-list.Tpo -c -o util/katana-list.obj `if test -f 'util/list.c'; then $(CYGPATH_W) 'util/list.c'; else $(CYGPATH_W) '$(srcdir)/util/list.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) util/$(DEPDIR)/katana-list.Tpo util/$(DEPDIR)/katana-list.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='util/list.c' object='util/katana-list.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(katana_CPPFLAGS) $(CPPFLAGS) $(katana_CFLAGS) $(CFLAGS) -c -o util/katana-list.obj `if test -f 'util/list.c'; then $(CYGPATH_W) 'util/list.c'; else $(CYGPATH_W) '$(srcdir)/util/list.c'; fi`

util/katana-logging.o: util/logging.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(katana_CPPFLAGS) $(CPPFLAGS) $(katana_CFLAGS) $(CFLAGS) -MT util/katana-logging.o -MD -MP -MF util/$(DEPDIR)/katana-logging.Tpo -c -o util/katana-logging.o `test -f 'util/logging.c' || echo '$(srcdir)/'`util/logging.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) util/$(DEPDIR)/katana-logging.Tpo util/$(DEPDIR)/katana-logging.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='util/logging.c' object='util/katana-logging.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(katana_CPPFLAGS) $(CPPFLAGS) $(katana_CFLAGS) $(CFLAGS) -c -o util/katana-logging.o `test -f 'util/logging.c' || echo '$(srcdir)/'`util/logging.c

util/katana-logging.obj: util/logging.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(katana_CPPFLAGS) $(CPPFLAGS) $(katana_CFLAGS) $(CFLAGS) -MT util/katana-logging.obj -MD -MP -MF util/$(DEPDIR)/katana-logging.Tpo -c -o util/katana-logging.obj `if test -f 'util/logging.c'; then $(CYGPATH_W) 'util/logging.c'; else $(CYGPATH_W) '$(srcdir)/util/logging.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) util/$(DEPDIR)/katana-logging.Tpo util/$(DEPDIR)/katana-logging.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='util/logging.c' object='util/katana-logging.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(katana_CPPFLAGS) $(CPPFLAGS) $(katana_CFLAGS) $(CFLAGS) -c -o util/katana-logging.obj `if test -f 'util/logging.c'; then $(CYGPATH_W) 'util/logging.c'; else $(CYGPATH_W) '$(srcdir)/util/logging.c'; fi`

util/katana-path.o: util/path.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(katana_CPPFLAGS) $(CPPFLAGS) $(katana_CFLAGS) $(CFLAGS) -MT util/katana-path.o -MD -MP -MF util/$(DEPDIR)/katana-path.Tpo -c -o util/katana-path.o `test -f 'util/path.c' || echo '$(srcdir)/'`util/path.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) util/$(DEPDIR)/katana-path.Tpo util/$(DEPDIR)/katana-path.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='util/path.c' object='util/katana-path.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(katana_CPPFLAGS) $(CPPFLAGS) $(katana_CFLAGS) $(CFLAGS) -c -o util/katana-path.o `test -f 'util/path.c' || echo '$(srcdir)/'`util/path.c

util/katana-path.obj: util/path.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(katana_CPPFLAGS) $(CPPFLAGS) $(katana_CFLAGS) $(CFLAGS) -MT util/katana-path.obj -MD -MP -MF util/$(DEPDIR)/katana-path.Tpo -c -o util/katana-path.obj `if test -f 'util/path.c'; then $(CYGPATH_W) 'util/path.c'; else $(CYGPATH_W) '$(srcdir)/util/path.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) util/$(DEPDIR)/katana-path.Tpo util/$(DEPDIR)/katana-path.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='util/path.c' object='util/katana-path.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(katana_CPPFLAGS) $(CPPFLAGS) $(katana_CFLAGS) $(CFLAGS) -c -o util/katana-path.obj `if test -f 'util/path.c'; then $(CYGPATH_W) 'util/path.c'; else $(CYGPATH_W) '$(srcdir)/util/path.c'; fi`

util/katana-refcounted.o: util/refcounted.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(katana_CPPFLAGS) $(CPPFLAGS) $(katana_CFLAGS) $(CFLAGS) -MT util/katana-refcounted.o -MD -MP -MF util/$(DEPDIR)/katana-refcounted.Tpo -c -o util/katana-refcounted.o `test -f 'util/refcounted.c' || echo '$(srcdir)/'`util/refcounted.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) util/$(DEPDIR)/katana-refcounted.Tpo util/$(DEPDIR)/katana-refcounted.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='util/refcounted.c' object='util/katana-refcounted.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(katana_CPPFLAGS) $(CPPFLAGS) $(katana_CFLAGS) $(CFLAGS) -c -o util/katana-refcounted.o `test -f 'util/refcounted.c' || echo '$(srcdir)/'`util/refcounted.c

util/katana-refcounted.obj: util/refcounted.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(katana_CPPFLAGS) $(CPPFLAGS) $(katana_CFLAGS) $(CFLAGS) -MT util/katana-refcounted.obj -MD -MP -MF util/$(DEPDIR)/katana-refcounted.Tpo -c -o util/katana-refcounted.obj `if test -f 'util/refcounted.c'; then $(CYGPATH_W) 'util/refcounted.c'; else $(CYGPATH_W) '$(srcdir)/util/refcounted.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) util/$(DEPDIR)/katana-refcounted.Tpo util/$(DEPDIR)/katana-refcounted.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='util/refcounted.c' object='util/katana-refcounted.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(katana_CPPFLAGS) $(CPPFLAGS) $(katana_CFLAGS) $(CFLAGS) -c -o util/katana-refcounted.obj `if test -f 'util/refcounted.c'; then $(CYGPATH_W) 'util/refcounted.c'; else $(CYGPATH_W) '$(srcdir)/util/refcounted.c'; fi`

util/katana-stack.o: util/stack.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(katana_CPPFLAGS) $(CPPFLAGS) $(katana_CFLAGS) $(CFLAGS) -MT util/katana-stack.o -MD -MP -MF util/$(DEPDIR)/katana-stack.Tpo -c -o util/katana-stack.o `test -f 'util/stack.c' || echo '$(srcdir)/'`util/stack.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) util/$(DEPDIR)/katana-stack.Tpo util/$(DEPDIR)/katana-stack.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='util/stack.c' object='util/katana-stack.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(katana_CPPFLAGS) $(CPPFLAGS) $(katana_CFLAGS) $(CFLAGS) -c -o util/katana-stack.o `test -f 'util/stack.c' || echo '$(srcdir)/'`util/stack.c

util/katana-stack.obj: util/stack.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(katana_CPPFLAGS) $(CPPFLAGS) $(katana_CFLAGS) $(CFLAGS) -MT util/katana-stack.obj -MD -MP -MF util/$(DEPDIR)/katana-stack.Tpo -c -o util/katana-stack.obj `if test -f 'util/stack.c'; then $(CYGPATH_W) 'util/stack.c'; else $(CYGPATH_W) '$(srcdir)/util/stack.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) util/$(DEPDIR)/katana-stack.Tpo util/$(DEPDIR)/katana-stack.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='util/stack.c' object='util/katana-stack.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(katana_CPPFLAGS) $(CPPFLAGS) $(katana_CFLAGS) $(CFLAGS) -c -o util/katana-stack.obj `if test -f 'util/stack.c'; then $(CYGPATH_W) 'util/stack.c'; else $(CYGPATH_W) '$(srcdir)/util/stack.c'; fi`

util/katana-growingBuffer.o: util/growingBuffer.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(katana_CPPFLAGS) $(CPPFLAGS) $(katana_CFLAGS) $(CFLAGS) -MT util/katana-growingBuffer.o -MD -MP -MF util/$(DEPDIR)/katana-growingBuffer.Tpo -c -o util/katana-growingBuffer.o `test -f 'util/growingBuffer.c' || echo '$(srcdir)/'`util/growingBuffer.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) util/$(DEPDIR)/katana-growingBuffer.Tpo util/$(DEPDIR)/katana-growingBuffer.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='util/growingBuffer.c' object='util/katana-growingBuffer.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(katana_CPPFLAGS) $(CPPFLAGS) $(katana_CFLAGS) $(CFLAGS) -c -o util/katana-growingBuffer.o `test -f 'util/growingBuffer.c' || echo '$(srcdir)/'`util/growingBuffer.c

util/katana-growingBuffer.obj: util/growingBuffer.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(katana_CPPFLAGS) $(CPPFLAGS) $(katana_CFLAGS) $(CFLAGS) -MT util/katana-growingBuffer.obj -MD -MP -MF util/$(DEPDIR)/katana-growingBuffer.Tpo -c -o util/katana-growingBuffer.obj `if test -f 'util/growingBuffer.c'; then $(CYGPATH_W) 'util/growingBuffer.c'; else $(CYGPATH_W) '$(srcdir)/util/growingBuffer.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) util/$(DEPDIR)/katana-growingBuffer.Tpo util/$(DEPDIR)/katana-growingBuffer.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='util/growingBuffer.c' object='util/katana-growingBuffer.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(katana_CPPFLAGS) $(CPPFLAGS) $(katana_CFLAGS) $(CFLAGS) -c -o util/katana-growingBuffer.obj `if test -f 'util/growingBuffer.c'; then $(CYGPATH_W) 'util/growingBuffer.c'; else $(CYGPATH_W) '$(srcdir)/util/growingBuffer.c'; fi`

util/katana-file.o: util/file.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(katana_CPPFLAGS) $(CPPFLAGS) $(katana_CFLAGS) $(CFLAGS) -MT util/katana-file.o -MD -MP -MF util/$(DEPDIR)/katana-file.Tpo -c -o util/katana-file.o `test -f 'util/file.c' || echo '$(srcdir)/'`util/file.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) util/$(DEPDIR)/katana-file.Tpo util/$(DEPDIR)/katana-file.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='util/file.c' object='util/katana-file.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(katana_CPPFLAGS) $(CPPFLAGS) $(katana_CFLAGS) $(CFLAGS) -c -o util/katana-file.o `test -f 'util/file.c' || echo '$(srcdir)/'`util/file.c

util/katana-file.obj: util/file.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(katana_CPPFLAGS) $(CPPFLAGS) $(katana_CFLAGS) $(CFLAGS) -MT util/katana-file.obj -MD -MP -MF util/$(DEPDIR)/katana-file.Tpo -c -o util/katana-file.obj `if test -f 'util/file.c'; then $(CYGPATH_W) 'util/file.c'; else $(CYGPATH_W) '$(srcdir)/util/file.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) util/$(DEPDIR)/katana-file.Tpo util/$(DEPDIR)/katana-file.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='util/file.c' object='util/katana-file.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(katana_CPPFLAGS) $(CPPFLAGS) $(katana_CFLAGS) $(CFLAGS) -c -o util/katana-file.obj `if test -f 'util/file.c'; then $(CYGPATH_W) 'util/file.c'; else $(CYGPATH_W) '$(srcdir)/util/file.c'; fi`

info/katana-fdedump.o: info/fdedump.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(katana_CPPFLAGS) $(CPPFLAGS) $(katana_CFLAGS) $(CFLAGS) -MT info/katana-fdedump.o -MD -MP -MF info/$(DEPDIR)/katana-fdedump.Tpo -c -o info/katana-fdedump.o `test -f 'info/fdedump.c' || echo '$(srcdir)/'`info/fdedump.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) info/$(DEPDIR)/katana-fdedump.Tpo info/$(DEPDIR)/katana-fdedump.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='info/fdedump.c' object='info/katana-fdedump.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(katana_CPPFLAGS) $(CPPFLAGS) $(katana_CFLAGS) $(CFLAGS) -c -o info/katana-fdedump.o `test -f 'info/fdedump.c' || echo '$(srcdir)/'`info/fdedump.c

info/katana-fdedump.obj: info/fdedump.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(katana_CPPFLAGS) $(CPPFLAGS) $(katana_CFLAGS) $(CFLAGS) -MT info/katana-fdedump.obj -MD -MP -MF info/$(DEPDIR)/katana-fdedump.Tpo -c -o info/katana-fdedump.obj `if test -f 'info/fdedump.c'; then $(CYGPATH_W) 'info/fdedump.c'; else $(CYGPATH_W) '$(srcdir)/info/fdedump.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) info/$(DEPDIR)/katana-fdedump.Tpo info/$(DEPDIR)/katana-fdedump.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='info/fdedump.c' object='info/katana-fdedump.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(katana_CPPFLAGS) $(CPPFLAGS) $(katana_CFLAGS) $(CFLAGS) -c -o info/katana-fdedump.obj `if test -f 'info/fdedump.c'; then $(CYGPATH_W) 'info/fdedump.c'; else $(CYGPATH_W) '$(srcdir)/info/fdedump.c'; fi`

info/katana-dwinfo_dump.o: info/dwinfo_dump.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(katana_CPPFLAGS) $(CPPFLAGS) $(katana_CFLAGS) $(CFLAGS) -MT info/katana-dwinfo_dump.o -MD -MP -MF info/$(DEPDIR)/katana-dwinfo_dump.Tpo -c -o info/katana-dwinfo_dump.o `test -f 'info/dwinfo_dump.c' || echo '$(srcdir)/'`info/dwinfo_dump.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) info/$(DEPDIR)/katana-dwinfo_dump.Tpo info/$(DEPDIR)/katana-dwinfo_dump.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='info/dwinfo_dump.c' object='info/katana-dwinfo_dump.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(katana_CPPFLAGS) $(CPPFLAGS) $(katana_CFLAGS) $(CFLAGS) -c -o info/katana-dwinfo_dump.o `test -f 'info/dwinfo_dump.c' || echo '$(srcdir)/'`info/dwinfo_dump.c

info/katana-dwinfo_dump.obj: info/dwinfo_dump.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(katana_CPPFLAGS) $(CPPFLAGS) $(katana_CFLAGS) $(CFLAGS) -MT info/katana-dwinfo_dump.obj -MD -MP -MF info/$(DEPDIR)/katana-dwinfo_dump.Tpo -c -o info/katana-dwinfo_dump.obj `if test -f 'info/dwinfo_dump.c'; then $(CYGPATH_W) 'info/dwinfo_dump.c'; else $(CYGPATH_W) '$(srcdir)/info/dwinfo_dump.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) info/$(DEPDIR)/katana-dwinfo_dump.Tpo info/$(DEPDIR)/katana-dwinfo_dump.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='info/dwinfo_dump.c' object='info/katana-dwinfo_dump.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(katana_CPPFLAGS) $(CPPFLAGS) $(katana_CFLAGS) $(CFLAGS) -c -o info/katana-dwinfo_dump.obj `if test -f 'info/dwinfo_dump.c'; then $(CYGPATH_W) 'info/dwinfo_dump.c'; else $(CYGPATH_W) '$(srcdir)/info/dwinfo_dump.c'; fi`

info/katana-unsafe_funcs_dump.o: info/unsafe_funcs_dump.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(katana_CPPFLAGS) $(CPPFLAGS) $(katana_CFLAGS) $(CFLAGS) -MT info/katana-unsafe_funcs_dump.o -MD -MP -MF info/$(DEPDIR)/katana-unsafe_funcs_dump.Tpo -c -o info/katana-unsafe_funcs_dump.o `test -f 'info/unsafe_funcs_dump.c' || echo '$(srcdir)/'`info/unsafe_funcs_dump.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) info/$(DEPDIR)/katana-unsafe_funcs_dump.Tpo info/$(DEPDIR)/katana-unsafe_funcs_dump.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='info/unsafe_funcs_dump.c' object='info/katana-unsafe_funcs_dump.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(katana_CPPFLAGS) $(CPPFLAGS) $(katana_CFLAGS) $(CFLAGS) -c -o info/katana-unsafe_funcs_dump.o `test -f 'info/unsafe_funcs_dump.c' || echo '$(srcdir)/'`info/unsafe_funcs_dump.c

info/katana-unsafe_funcs_dump.obj: info/unsafe_funcs_dump.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(katana_CPPFLAGS) $(CPPFLAGS) $(katana_CFLAGS) $(CFLAGS) -MT info/katana-unsafe_funcs_dump.obj -MD -MP -MF info/$(DEPDIR)/katana-unsafe_funcs_dump.Tpo -c -o info/katana-unsafe_funcs_dump.obj `if test -f 'info/unsafe_funcs_dump.c'; then $(CYGPATH_W) 'info/unsafe_funcs_dump.c'; else $(CYGPATH_W) '$(srcdir)/info/unsafe_funcs_dump.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) info/$(DEPDIR)/katana-unsafe_funcs_dump.Tpo info/$(DEPDIR)/katana-unsafe_funcs_dump.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='info/unsafe_funcs_dump.c' object='info/katana-unsafe_funcs_dump.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(katana_CPPFLAGS) $(CPPFLAGS) $(katana_CFLAGS) $(CFLAGS) -c -o info/katana-unsafe_funcs_dump.obj `if test -f 'info/unsafe_funcs_dump.c'; then $(CYGPATH_W) 'info/unsafe_funcs_dump.c'; else $(CYGPATH_W) '$(srcdir)/info/unsafe_funcs_dump.c'; fi`

rewriter/katana-rewrite.o: rewriter/rewrite.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(katana_CPPFLAGS) $(CPPFLAGS) $(katana_CFLAGS) $(CFLAGS) -MT rewriter/katana-rewrite.o -MD -MP -MF rewriter/$(DEPDIR)/katana-rewrite.Tpo -c -o rewriter/katana-rewrite.o `test -f 'rewriter/rewrite.c' || echo '$(srcdir)/'`rewriter/rewrite.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) rewriter/$(DEPDIR)/katana-rewrite.Tpo rewriter/$(DEPDIR)/katana-rewrite.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='rewriter/rewrite.c' object='rewriter/katana-rewrite.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(katana_CPPFLAGS) $(CPPFLAGS) $(katana_CFLAGS) $(CFLAGS) -c -o rewriter/katana-rewrite.o `test -f 'rewriter/rewrite.c' || echo '$(srcdir)/'`rewriter/rewrite.c

rewriter/katana-rewrite.obj: rewriter/rewrite.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(katana_CPPFLAGS) $(CPPFLAGS) $(katana_CFLAGS) $(CFLAGS) -MT rewriter/katana-rewrite.obj -MD -MP -MF rewriter/$(DEPDIR)/katana-rewrite.Tpo -c -o rewriter/katana-rewrite.obj `if test -f 'rewriter/rewrite.c'; then $(CYGPATH_W) 'rewriter/rewrite.c'; else $(CYGPATH_W) '$(srcdir)/rewriter/rewrite.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) rewriter/$(DEPDIR)/katana-rewrite.Tpo rewriter/$(DEPDIR)/katana-rewrite.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='rewriter/rewrite.c' object='rewriter/katana-rewrite.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(katana_CPPFLAGS) $(CPPFLAGS) $(katana_CFLAGS) $(CFLAGS) -c -o rewriter/katana-rewrite.obj `if test -f 'rewriter/rewrite.c'; then $(CYGPATH_W) 'rewriter/rewrite.c'; else $(CYGPATH_W) '$(srcdir)/rewriter/rewrite.c'; fi`

shell/dwarfscript/katana-dwarfscript.yy.o: shell/dwarfscript/dwarfscript.yy.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(katana_CPPFLAGS) $(CPPFLAGS) $(katana_CFLAGS) $(CFLAGS) -MT shell/dwarfscript/katana-dwarfscript.yy.o -MD -MP -MF shell/dwarfscript/$(DEPDIR)/katana-dwarfscript.yy.Tpo -c -o shell/dwarfscript/katana-dwarfscript.yy.o `test -f 'shell/dwarfscript/dwarfscript.yy.c' || echo '$(srcdir)/'`shell/dwarfscript/dwarfscript.yy.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) shell/dwarfscript/$(DEPDIR)/katana-dwarfscript.yy.Tpo shell/dwarfscript/$(DEPDIR)/katana-dwarfscript.yy.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='shell/dwarfscript/dwarfscript.yy.c' object='shell/dwarfscript/katana-dwarfscript.yy.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(katana_CPPFLAGS) $(CPPFLAGS) $(katana_CFLAGS) $(CFLAGS) -c -o shell/dwarfscript/katana-dwarfscript.yy.o `test -f 'shell/dwarfscript/dwarfscript.yy.c' || echo '$(srcdir)/'`shell/dwarfscript/dwarfscript.yy.c

shell/dwarfscript/katana-dwarfscript.yy.obj: shell/dwarfscript/dwarfscript.yy.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(katana_CPPFLAGS) $(CPPFLAGS) $(katana_CFLAGS) $(CFLAGS) -MT shell/dwarfscript/katana-dwarfscript.yy.obj -MD -MP -MF shell/dwarfscript/$(DEPDIR)/katana-dwarfscript.yy.Tpo -c -o shell/dwarfscript/katana-dwarfscript.yy.obj `if test -f 'shell/dwarfscript/dwarfscript.yy.c'; then $(CYGPATH_W) 'shell/dwarfscript/dwarfscript.yy.c'; else $(CYGPATH_W) '$(srcdir)/shell/dwarfscript/dwarfscript.yy.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) shell/dwarfscript/$(DEPDIR)/katana-dwarfscript.yy.Tpo shell/dwarfscript/$(DEPDIR)/katana-dwarfscript.yy.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='shell/dwarfscript/dwarfscript.yy.c' object='shell/dwarfscript/katana-dwarfscript.yy.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(katana_CPPFLAGS) $(CPPFLAGS) $(katana_CFLAGS) $(CFLAGS) -c -o shell/dwarfscript/katana-dwarfscript.yy.obj `if test -f 'shell/dwarfscript/dwarfscript.yy.c'; then $(CYGPATH_W) 'shell/dwarfscript/dwarfscript.yy.c'; else $(CYGPATH_W) '$(srcdir)/shell/dwarfscript/dwarfscript.yy.c'; fi`

shell/dwarfscript/katana-dwarfscript.tab.o: shell/dwarfscript/dwarfscript.tab.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(katana_CPPFLAGS) $(CPPFLAGS) $(katana_CFLAGS) $(CFLAGS) -MT shell/dwarfscript/katana-dwarfscript.tab.o -MD -MP -MF shell/dwarfscript/$(DEPDIR)/katana-dwarfscript.tab.Tpo -c -o shell/dwarfscript/katana-dwarfscript.tab.o `test -f 'shell/dwarfscript/dwarfscript.tab.c' || echo '$(srcdir)/'`shell/dwarfscript/dwarfscript.tab.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) shell/dwarfscript/$(DEPDIR)/katana-dwarfscript.tab.Tpo shell/dwarfscript/$(DEPDIR)/katana-dwarfscript.tab.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='shell/dwarfscript/dwarfscript.tab.c' object='shell/dwarfscript/katana-dwarfscript.tab.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(katana_CPPFLAGS) $(CPPFLAGS) $(katana_CFLAGS) $(CFLAGS) -c -o shell/dwarfscript/katana-dwarfscript.tab.o `test -f 'shell/dwarfscript/dwarfscript.tab.c' || echo '$(srcdir)/'`shell/dwarfscript/dwarfscript.tab.c

shell/dwarfscript/katana-dwarfscript.tab.obj: shell/dwarfscript/dwarfscript.tab.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(katana_CPPFLAGS) $(CPPFLAGS) $(katana_CFLAGS) $(CFLAGS) -MT shell/dwarfscript/katana-dwarfscript.tab.obj -MD -MP -MF shell/dwarfscript/$(DEPDIR)/katana-dwarfscript.tab.Tpo -c -o shell/dwarfscript/katana-dwarfscript.tab.obj `if test -f 'shell/dwarfscript/dwarfscript.tab.c'; then $(CYGPATH_W) 'shell/dwarfscript/dwarfscript.tab.c'; else $(CYGPATH_W) '$(srcdir)/shell/dwarfscript/dwarfscript.tab.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) shell/dwarfscript/$(DEPDIR)/katana-dwarfscript.tab.Tpo shell/dwarfscript/$(DEPDIR)/katana-dwarfscript.tab.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='shell/dwarfscript/dwarfscript.tab.c' object='shell/dwarfscript/katana-dwarfscript.tab.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(katana_CPPFLAGS) $(CPPFLAGS) $(katana_CFLAGS) $(CFLAGS) -c -o shell/dwarfscript/katana-dwarfscript.tab.obj `if test -f 'shell/dwarfscript/dwarfscript.tab.c'; then $(CYGPATH_W) 'shell/dwarfscript/dwarfscript.tab.c'; else $(CYGPATH_W) '$(srcdir)/shell/dwarfscript/dwarfscript.tab.c'; fi`

.cpp.o:
@am__fastdepCXX_TRUE@	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.o$$||'`;\
@am__fastdepCXX_TRUE@	$(CXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
@am__fastdepCXX_TRUE@	$(am__mv) $$depbase.Tpo $$depbase.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
@am__fastdepCXX_TRUE@	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.obj$$||'`;\
@am__fastdepCXX_TRUE@	$(CXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ `$(CYGPATH_W) '$<'` &&\
@am__fastdepCXX_TRUE@	$(am__mv) $$depbase.Tpo $$depbase.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

util/katana-cxxutil.o: util/cxxutil.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(katana_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT util/katana-cxxutil.o -MD -MP -MF util/$(DEPDIR)/katana-cxxutil.Tpo -c -o util/katana-cxxutil.o `test -f 'util/cxxutil.cpp' || echo '$(srcdir)/'`util/cxxutil.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) util/$(DEPDIR)/katana-cxxutil.Tpo util/$(DEPDIR)/katana-cxxutil.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='util/cxxutil.cpp' object='util/katana-cxxutil.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(katana_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o util/katana-cxxutil.o `test -f 'util/cxxutil.cpp' || echo '$(srcdir)/'`util/cxxutil.cpp

util/katana-cxxutil.obj: util/cxxutil.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(katana_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT util/katana-cxxutil.obj -MD -MP -MF util/$(DEPDIR)/katana-cxxutil.Tpo -c -o util/katana-cxxutil.obj `if test -f 'util/cxxutil.cpp'; then $(CYGPATH_W) 'util/cxxutil.cpp'; else $(CYGPATH_W) '$(srcdir)/util/cxxutil.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) util/$(DEPDIR)/katana-cxxutil.Tpo util/$(DEPDIR)/katana-cxxutil.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='util/cxxutil.cpp' object='util/katana-cxxutil.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(katana_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o util/katana-cxxutil.obj `if test -f 'util/cxxutil.cpp'; then $(CYGPATH_W) 'util/cxxutil.cpp'; else $(CYGPATH_W) '$(srcdir)/util/cxxutil.cpp'; fi`

shell/katana-shell.o: shell/shell.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(katana_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT shell/katana-shell.o -MD -MP -MF shell/$(DEPDIR)/katana-shell.Tpo -c -o shell/katana-shell.o `test -f 'shell/shell.cpp' || echo '$(srcdir)/'`shell/shell.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) shell/$(DEPDIR)/katana-shell.Tpo shell/$(DEPDIR)/katana-shell.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='shell/shell.cpp' object='shell/katana-shell.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(katana_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o shell/katana-shell.o `test -f 'shell/shell.cpp' || echo '$(srcdir)/'`shell/shell.cpp

shell/katana-shell.obj: shell/shell.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(katana_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT shell/katana-shell.obj -MD -MP -MF shell/$(DEPDIR)/katana-shell.Tpo -c -o shell/katana-shell.obj `if test -f 'shell/shell.cpp'; then $(CYGPATH_W) 'shell/shell.cpp'; else $(CYGPATH_W) '$(srcdir)/shell/shell.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) shell/$(DEPDIR)/katana-shell.Tpo shell/$(DEPDIR)/katana-shell.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='shell/shell.cpp' object='shell/katana-shell.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(katana_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o shell/katana-shell.obj `if test -f 'shell/shell.cpp'; then $(CYGPATH_W) 'shell/shell.cpp'; else $(CYGPATH_W) '$(srcdir)/shell/shell.cpp'; fi`

shell/katana-shell.yy.o: shell/shell.yy.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(katana_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT shell/katana-shell.yy.o -MD -MP -MF shell/$(DEPDIR)/katana-shell.yy.Tpo -c -o shell/katana-shell.yy.o `test -f 'shell/shell.yy.cpp' || echo '$(srcdir)/'`shell/shell.yy.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) shell/$(DEPDIR)/katana-shell.yy.Tpo shell/$(DEPDIR)/katana-shell.yy.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='shell/shell.yy.cpp' object='shell/katana-shell.yy.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(katana_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o shell/katana-shell.yy.o `test -f 'shell/shell.yy.cpp' || echo '$(srcdir)/'`shell/shell.yy.cpp

shell/katana-shell.yy.obj: shell/shell.yy.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(katana_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT shell/katana-shell.yy.obj -MD -MP -MF shell/$(DEPDIR)/katana-shell.yy.Tpo -c -o shell/katana-shell.yy.obj `if test -f 'shell/shell.yy.cpp'; then $(CYGPATH_W) 'shell/shell.yy.cpp'; else $(CYGPATH_W) '$(srcdir)/shell/shell.yy.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) shell/$(DEPDIR)/katana-shell.yy.Tpo shell/$(DEPDIR)/katana-shell.yy.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='shell/shell.yy.cpp' object='shell/katana-shell.yy.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(katana_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o shell/katana-shell.yy.obj `if test -f 'shell/shell.yy.cpp'; then $(CYGPATH_W) 'shell/shell.yy.cpp'; else $(CYGPATH_W) '$(srcdir)/shell/shell.yy.cpp'; fi`

shell/katana-shell.tab.o: shell/shell.tab.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(katana_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT shell/katana-shell.tab.o -MD -MP -MF shell/$(DEPDIR)/katana-shell.tab.Tpo -c -o shell/katana-shell.tab.o `test -f 'shell/shell.tab.cpp' || echo '$(srcdir)/'`shell/shell.tab.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) shell/$(DEPDIR)/katana-shell.tab.Tpo shell/$(DEPDIR)/katana-shell.tab.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='shell/shell.tab.cpp' object='shell/katana-shell.tab.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(katana_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o shell/katana-shell.tab.o `test -f 'shell/shell.tab.cpp' || echo '$(srcdir)/'`shell/shell.tab.cpp

shell/katana-shell.tab.obj: shell/shell.tab.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(katana_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT shell/katana-shell.tab.obj -MD -MP -MF shell/$(DEPDIR)/katana-shell.tab.Tpo -c -o shell/katana-shell.tab.obj `if test -f 'shell/shell.tab.cpp'; then $(CYGPATH_W) 'shell/shell.tab.cpp'; else $(CYGPATH_W) '$(srcdir)/shell/shell.tab.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) shell/$(DEPDIR)/katana-shell.tab.Tpo shell/$(DEPDIR)/katana-shell.tab.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='shell/shell.tab.cpp' object='shell/katana-shell.tab.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(katana_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o shell/katana-shell.tab.obj `if test -f 'shell/shell.tab.cpp'; then $(CYGPATH_W) 'shell/shell.tab.cpp'; else $(CYGPATH_W) '$(srcdir)/shell/shell.tab.cpp'; fi`

shell/katana-param.o: shell/param.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(katana_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT shell/katana-param.o -MD -MP -MF shell/$(DEPDIR)/katana-param.Tpo -c -o shell/katana-param.o `test -f 'shell/param.cpp' || echo '$(srcdir)/'`shell/param.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) shell/$(DEPDIR)/katana-param.Tpo shell/$(DEPDIR)/katana-param.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='shell/param.cpp' object='shell/katana-param.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(katana_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o shell/katana-param.o `test -f 'shell/param.cpp' || echo '$(srcdir)/'`shell/param.cpp

shell/katana-param.obj: shell/param.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(katana_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT shell/katana-param.obj -MD -MP -MF shell/$(DEPDIR)/katana-param.Tpo -c -o shell/katana-param.obj `if test -f 'shell/param.cpp'; then $(CYGPATH_W) 'shell/param.cpp'; else $(CYGPATH_W) '$(srcdir)/shell/param.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) shell/$(DEPDIR)/katana-param.Tpo shell/$(DEPDIR)/katana-param.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='shell/param.cpp' object='shell/katana-param.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(katana_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o shell/katana-param.obj `if test -f 'shell/param.cpp'; then $(CYGPATH_W) 'shell/param.cpp'; else $(CYGPATH_W) '$(srcdir)/shell/param.cpp'; fi`

shell/katana-variable.o: shell/variable.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(katana_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT shell/katana-variable.o -MD -MP -MF shell/$(DEPDIR)/katana-variable.Tpo -c -o shell/katana-variable.o `test -f 'shell/variable.cpp' || echo '$(srcdir)/'`shell/variable.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) shell/$(DEPDIR)/katana-variable.Tpo shell/$(DEPDIR)/katana-variable.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='shell/variable.cpp' object='shell/katana-variable.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(katana_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o shell/katana-variable.o `test -f 'shell/variable.cpp' || echo '$(srcdir)/'`shell/variable.cpp

shell/katana-variable.obj: shell/variable.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(katana_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT shell/katana-variable.obj -MD -MP -MF shell/$(DEPDIR)/katana-variable.Tpo -c -o shell/katana-variable.obj `if test -f 'shell/variable.cpp'; then $(CYGPATH_W) 'shell/variable.cpp'; else $(CYGPATH_W) '$(srcdir)/shell/variable.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) shell/$(DEPDIR)/katana-variable.Tpo shell/$(DEPDIR)/katana-variable.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='shell/variable.cpp' object='shell/katana-variable.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(katana_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o shell/katana-variable.obj `if test -f 'shell/variable.cpp'; then $(CYGPATH_W) 'shell/variable.cpp'; else $(CYGPATH_W) '$(srcdir)/shell/variable.cpp'; fi`

shell/katana-arrayAccessParam.o: shell/arrayAccessParam.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(katana_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT shell/katana-arrayAccessParam.o -MD -MP -MF shell/$(DEPDIR)/katana-arrayAccessParam.Tpo -c -o shell/katana-arrayAccessParam.o `test -f 'shell/arrayAccessParam.cpp' || echo '$(srcdir)/'`shell/arrayAccessParam.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) shell/$(DEPDIR)/katana-arrayAccessParam.Tpo shell/$(DEPDIR)/katana-arrayAccessParam.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='shell/arrayAccessParam.cpp' object='shell/katana-arrayAccessParam.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(katana_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o shell/katana-arrayAccessParam.o `test -f 'shell/arrayAccessParam.cpp' || echo '$(srcdir)/'`shell/arrayAccessParam.cpp

shell/katana-arrayAccessParam.obj: shell/arrayAccessParam.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(katana_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT shell/katana-arrayAccessParam.obj -MD -MP -MF shell/$(DEPDIR)/katana-arrayAccessParam.Tpo -c -o shell/katana-arrayAccessParam.obj `if test -f 'shell/arrayAccessParam.cpp'; then $(CYGPATH_W) 'shell/arrayAccessParam.cpp'; else $(CYGPATH_W) '$(srcdir)/shell/arrayAccessParam.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) shell/$(DEPDIR)/katana-arrayAccessParam.Tpo shell/$(DEPDIR)/katana-arrayAccessParam.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='shell/arrayAccessParam.cpp' object='shell/katana-arrayAccessParam.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(katana_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o shell/katana-arrayAccessParam.obj `if test -f 'shell/arrayAccessParam.cpp'; then $(CYGPATH_W) 'shell/arrayAccessParam.cpp'; else $(CYGPATH_W) '$(srcdir)/shell/arrayAccessParam.cpp'; fi`

shell/commands/katana-command.o: shell/commands/command.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(katana_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT shell/commands/katana-command.o -MD -MP -MF shell/commands/$(DEPDIR)/katana-command.Tpo -c -o shell/commands/katana-command.o `test -f 'shell/commands/command.cpp' || echo '$(srcdir)/'`shell/commands/command.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) shell/commands/$(DEPDIR)/katana-command.Tpo shell/commands/$(DEPDIR)/katana-command.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='shell/commands/command.cpp' object='shell/commands/katana-command.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(katana_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o shell/commands/katana-command.o `test -f 'shell/commands/command.cpp' || echo '$(srcdir)/'`shell/commands/command.cpp

shell/commands/katana-command.obj: shell/commands/command.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(katana_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT shell/commands/katana-command.obj -MD -MP -MF shell/commands/$(DEPDIR)/katana-command.Tpo -c -o shell/commands/katana-command.obj `if test -f 'shell/commands/command.cpp'; then $(CYGPATH_W) 'shell/commands/command.cpp'; else $(CYGPATH_W) '$(srcdir)/shell/commands/command.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) shell/commands/$(DEPDIR)/katana-command.Tpo shell/commands/$(DEPDIR)/katana-command.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='shell/commands/command.cpp' object='shell/commands/katana-command.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(katana_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o shell/commands/katana-command.obj `if test -f 'shell/commands/command.cpp'; then $(CYGPATH_W) 'shell/commands/command.cpp'; else $(CYGPATH_W) '$(srcdir)/shell/commands/command.cpp'; fi`

shell/commands/katana-loadCommand.o: shell/commands/loadCommand.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(katana_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT shell/commands/katana-loadCommand.o -MD -MP -MF shell/commands/$(DEPDIR)/katana-loadCommand.Tpo -c -o shell/commands/katana-loadCommand.o `test -f 'shell/commands/loadCommand.cpp' || echo '$(srcdir)/'`shell/commands/loadCommand.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) shell/commands/$(DEPDIR)/katana-loadCommand.Tpo shell/commands/$(DEPDIR)/katana-loadCommand.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='shell/commands/loadCommand.cpp' object='shell/commands/katana-loadCommand.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(katana_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o shell/commands/katana-loadCommand.o `test -f 'shell/commands/loadCommand.cpp' || echo '$(srcdir)/'`shell/commands/loadCommand.cpp

shell/commands/katana-loadCommand.obj: shell/commands/loadCommand.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(katana_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT shell/commands/katana-loadCommand.obj -MD -MP -MF shell/commands/$(DEPDIR)/katana-loadCommand.Tpo -c -o shell/commands/katana-loadCommand.obj `if test -f 'shell/commands/loadCommand.cpp'; then $(CYGPATH_W) 'shell/commands/loadCommand.cpp'; else $(CYGPATH_W) '$(srcdir)/shell/commands/loadCommand.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) shell/commands/$(DEPDIR)/katana-loadCommand.Tpo shell/commands/$(DEPDIR)/katana-loadCommand.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='shell/commands/loadCommand.cpp' object='shell/commands/katana-loadCommand.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(katana_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o shell/commands/katana-loadCommand.obj `if test -f 'shell/commands/loadCommand.cpp'; then $(CYGPATH_W) 'shell/commands/loadCommand.cpp'; else $(CYGPATH_W) '$(srcdir)/shell/commands/loadCommand.cpp'; fi`

shell/commands/katana-saveCommand.o: shell/commands/saveCommand.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(katana_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT shell/commands/katana-saveCommand.o -MD -MP -MF shell/commands/$(DEPDIR)/katana-saveCommand.Tpo -c -o shell/commands/katana-saveCommand.o `test -f 'shell/commands/saveCommand.cpp' || echo '$(srcdir)/'`shell/commands/saveCommand.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) shell/commands/$(DEPDIR)/katana-saveCommand.Tpo shell/commands/$(DEPDIR)/katana-saveCommand.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='shell/commands/saveCommand.cpp' object='shell/commands/katana-saveCommand.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(katana_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o shell/commands/katana-saveCommand.o `test -f 'shell/commands/saveCommand.cpp' || echo '$(srcdir)/'`shell/commands/saveCommand.cpp

shell/commands/katana-saveCommand.obj: shell/commands/saveCommand.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(katana_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT shell/commands/katana-saveCommand.obj -MD -MP -MF shell/commands/$(DEPDIR)/katana-saveCommand.Tpo -c -o shell/commands/katana-saveCommand.obj `if test -f 'shell/commands/saveCommand.cpp'; then $(CYGPATH_W) 'shell/commands/saveCommand.cpp'; else $(CYGPATH_W) '$(srcdir)/shell/commands/saveCommand.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) shell/commands/$(DEPDIR)/katana-saveCommand.Tpo shell/commands/$(DEPDIR)/katana-saveCommand.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='shell/commands/saveCommand.cpp' object='shell/commands/katana-saveCommand.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(katana_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o shell/commands/katana-saveCommand.obj `if test -f 'shell/commands/saveCommand.cpp'; then $(CYGPATH_W) 'shell/commands/saveCommand.cpp'; else $(CYGPATH_W) '$(srcdir)/shell/commands/saveCommand.cpp'; fi`

shell/commands/katana-replaceCommand.o: shell/commands/replaceCommand.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(katana_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT shell/commands/katana-replaceCommand.o -MD -MP -MF shell/commands/$(DEPDIR)/katana-replaceCommand.Tpo -c -o shell/commands/katana-replaceCommand.o `test -f 'shell/commands/replaceCommand.cpp' || echo '$(srcdir)/'`shell/commands/replaceCommand.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) shell/commands/$(DEPDIR)/katana-replaceCommand.Tpo shell/commands/$(DEPDIR)/katana-replaceCommand.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='shell/commands/replaceCommand.cpp' object='shell/commands/katana-replaceCommand.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(katana_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o shell/commands/katana-replaceCommand.o `test -f 'shell/commands/replaceCommand.cpp' || echo '$(srcdir)/'`shell/commands/replaceCommand.cpp

shell/commands/katana-replaceCommand.obj: shell/commands/replaceCommand.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(katana_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT shell/commands/katana-replaceCommand.obj -MD -MP -MF shell/commands/$(DEPDIR)/katana-replaceCommand.Tpo -c -o shell/commands/katana-replaceCommand.obj `if test -f 'shell/commands/replaceCommand.cpp'; then $(CYGPATH_W) 'shell/commands/replaceCommand.cpp'; else $(CYGPATH_W) '$(srcdir)/shell/commands/replaceCommand.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) shell/commands/$(DEPDIR)/katana-replaceCommand.Tpo shell/commands/$(DEPDIR)/katana-replaceCommand.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='shell/commands/replaceCommand.cpp' object='shell/commands/katana-replaceCommand.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(katana_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o shell/commands/katana-replaceCommand.obj `if test -f 'shell/commands/replaceCommand.cpp'; then $(CYGPATH_W) 'shell/commands/replaceCommand.cpp'; else $(CYGPATH_W) '$(srcdir)/shell/commands/replaceCommand.cpp'; fi`

shell/commands/katana-dwarfscriptCommand.o: shell/commands/dwarfscriptCommand.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(katana_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT shell/commands/katana-dwarfscriptCommand.o -MD -MP -MF shell/commands/$(DEPDIR)/katana-dwarfscriptCommand.Tpo -c -o shell/commands/katana-dwarfscriptCommand.o `test -f 'shell/commands/dwarfscriptCommand.cpp' || echo '$(srcdir)/'`shell/commands/dwarfscriptCommand.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) shell/commands/$(DEPDIR)/katana-dwarfscriptCommand.Tpo shell/commands/$(DEPDIR)/katana-dwarfscriptCommand.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='shell/commands/dwarfscriptCommand.cpp' object='shell/commands/katana-dwarfscriptCommand.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(katana_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o shell/commands/katana-dwarfscriptCommand.o `test -f 'shell/commands/dwarfscriptCommand.cpp' || echo '$(srcdir)/'`shell/commands/dwarfscriptCommand.cpp

shell/commands/katana-dwarfscriptCommand.obj: shell/commands/dwarfscriptCommand.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(katana_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT shell/commands/katana-dwarfscriptCommand.obj -MD -MP -MF shell/commands/$(DEPDIR)/katana-dwarfscriptCommand.Tpo -c -o shell/commands/katana-dwarfscriptCommand.obj `if test -f 'shell/commands/dwarfscriptCommand.cpp'; then $(CYGPATH_W) 'shell/commands/dwarfscriptCommand.cpp'; else $(CYGPATH_W) '$(srcdir)/shell/commands/dwarfscriptCommand.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) shell/commands/$(DEPDIR)/katana-dwarfscriptCommand.Tpo shell/commands/$(DEPDIR)/katana-dwarfscriptCommand.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='shell/commands/dwarfscriptCommand.cpp' object='shell/commands/katana-dwarfscriptCommand.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(katana_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o shell/commands/katana-dwarfscriptCommand.obj `if test -f 'shell/commands/dwarfscriptCommand.cpp'; then $(CYGPATH_W) 'shell/commands/dwarfscriptCommand.cpp'; else $(CYGPATH_W) '$(srcdir)/shell/commands/dwarfscriptCommand.cpp'; fi`

shell/commands/katana-shellCommand.o: shell/commands/shellCommand.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(katana_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT shell/commands/katana-shellCommand.o -MD -MP -MF shell/commands/$(DEPDIR)/katana-shellCommand.Tpo -c -o shell/commands/katana-shellCommand.o `test -f 'shell/commands/shellCommand.cpp' || echo '$(srcdir)/'`shell/commands/shellCommand.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) shell/commands/$(DEPDIR)/katana-shellCommand.Tpo shell/commands/$(DEPDIR)/katana-shellCommand.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='shell/commands/shellCommand.cpp' object='shell/commands/katana-shellCommand.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(katana_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o shell/commands/katana-shellCommand.o `test -f 'shell/commands/shellCommand.cpp' || echo '$(srcdir)/'`shell/commands/shellCommand.cpp

shell/commands/katana-shellCommand.obj: shell/commands/shellCommand.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(katana_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT shell/commands/katana-shellCommand.obj -MD -MP -MF shell/commands/$(DEPDIR)/katana-shellCommand.Tpo -c -o shell/commands/katana-shellCommand.obj `if test -f 'shell/commands/shellCommand.cpp'; then $(CYGPATH_W) 'shell/commands/shellCommand.cpp'; else $(CYGPATH_W) '$(srcdir)/shell/commands/shellCommand.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) shell/commands/$(DEPDIR)/katana-shellCommand.Tpo shell/commands/$(DEPDIR)/katana-shellCommand.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='shell/commands/shellCommand.cpp' object='shell/commands/katana-shellCommand.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(katana_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o shell/commands/katana-shellCommand.obj `if test -f 'shell/commands/shellCommand.cpp'; then $(CYGPATH_W) 'shell/commands/shellCommand.cpp'; else $(CYGPATH_W) '$(srcdir)/shell/commands/shellCommand.cpp'; fi`

shell/commands/katana-infoCommand.o: shell/commands/infoCommand.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(katana_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT shell/commands/katana-infoCommand.o -MD -MP -MF shell/commands/$(DEPDIR)/katana-infoCommand.Tpo -c -o shell/commands/katana-infoCommand.o `test -f 'shell/commands/infoCommand.cpp' || echo '$(srcdir)/'`shell/commands/infoCommand.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) shell/commands/$(DEPDIR)/katana-infoCommand.Tpo shell/commands/$(DEPDIR)/katana-infoCommand.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='shell/commands/infoCommand.cpp' object='shell/commands/katana-infoCommand.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(katana_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o shell/commands/katana-infoCommand.o `test -f 'shell/commands/infoCommand.cpp' || echo '$(srcdir)/'`shell/commands/infoCommand.cpp

shell/commands/katana-infoCommand.obj: shell/commands/infoCommand.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(katana_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT shell/commands/katana-infoCommand.obj -MD -MP -MF shell/commands/$(DEPDIR)/katana-infoCommand.Tpo -c -o shell/commands/katana-infoCommand.obj `if test -f 'shell/commands/infoCommand.cpp'; then $(CYGPATH_W) 'shell/commands/infoCommand.cpp'; else $(CYGPATH_W) '$(srcdir)/shell/commands/infoCommand.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) shell/commands/$(DEPDIR)/katana-infoCommand.Tpo shell/commands/$(DEPDIR)/katana-infoCommand.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='shell/commands/infoCommand.cpp' object='shell/commands/katana-infoCommand.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(katana_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o shell/commands/katana-infoCommand.obj `if test -f 'shell/commands/infoCommand.cpp'; then $(CYGPATH_W) 'shell/commands/infoCommand.cpp'; else $(CYGPATH_W) '$(srcdir)/shell/commands/infoCommand.cpp'; fi`

shell/commands/katana-hashCommand.o: shell/commands/hashCommand.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(katana_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT shell/commands/katana-hashCommand.o -MD -MP -MF shell/commands/$(DEPDIR)/katana-hashCommand.Tpo -c -o shell/commands/katana-hashCommand.o `test -f 'shell/commands/hashCommand.cpp' || echo '$(srcdir)/'`shell/commands/hashCommand.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) shell/commands/$(DEPDIR)/katana-hashCommand.Tpo shell/commands/$(DEPDIR)/katana-hashCommand.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='shell/commands/hashCommand.cpp' object='shell/commands/katana-hashCommand.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(katana_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o shell/commands/katana-hashCommand.o `test -f 'shell/commands/hashCommand.cpp' || echo '$(srcdir)/'`shell/commands/hashCommand.cpp

shell/commands/katana-hashCommand.obj: shell/commands/hashCommand.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(katana_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT shell/commands/katana-hashCommand.obj -MD -MP -MF shell/commands/$(DEPDIR)/katana-hashCommand.Tpo -c -o shell/commands/katana-hashCommand.obj `if test -f 'shell/commands/hashCommand.cpp'; then $(CYGPATH_W) 'shell/commands/hashCommand.cpp'; else $(CYGPATH_W) '$(srcdir)/shell/commands/hashCommand.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) shell/commands/$(DEPDIR)/katana-hashCommand.Tpo shell/commands/$(DEPDIR)/katana-hashCommand.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='shell/commands/hashCommand.cpp' object='shell/commands/katana-hashCommand.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(katana_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o shell/commands/katana-hashCommand.obj `if test -f 'shell/commands/hashCommand.cpp'; then $(CYGPATH_W) 'shell/commands/hashCommand.cpp'; else $(CYGPATH_W) '$(srcdir)/shell/commands/hashCommand.cpp'; fi`

shell/commands/katana-patchCommand.o: shell/commands/patchCommand.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(katana_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT shell/commands/katana-patchCommand.o -MD -MP -MF shell/commands/$(DEPDIR)/katana-patchCommand.Tpo -c -o shell/commands/katana-patchCommand.o `test -f 'shell/commands/patchCommand.cpp' || echo '$(srcdir)/'`shell/commands/patchCommand.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) shell/commands/$(DEPDIR)/katana-patchCommand.Tpo shell/commands/$(DEPDIR)/katana-patchCommand.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='shell/commands/patchCommand.cpp' object='shell/commands/katana-patchCommand.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(katana_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o shell/commands/katana-patchCommand.o `test -f 'shell/commands/patchCommand.cpp' || echo '$(srcdir)/'`shell/commands/patchCommand.cpp

shell/commands/katana-patchCommand.obj: shell/commands/patchCommand.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(katana_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT shell/commands/katana-patchCommand.obj -MD -MP -MF shell/commands/$(DEPDIR)/katana-patchCommand.Tpo -c -o shell/commands/katana-patchCommand.obj `if test -f 'shell/commands/patchCommand.cpp'; then $(CYGPATH_W) 'shell/commands/patchCommand.cpp'; else $(CYGPATH_W) '$(srcdir)/shell/commands/patchCommand.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) shell/commands/$(DEPDIR)/katana-patchCommand.Tpo shell/commands/$(DEPDIR)/katana-patchCommand.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='shell/commands/patchCommand.cpp' object='shell/commands/katana-patchCommand.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(katana_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o shell/commands/katana-patchCommand.obj `if test -f 'shell/commands/patchCommand.cpp'; then $(CYGPATH_W) 'shell/commands/patchCommand.cpp'; else $(CYGPATH_W) '$(srcdir)/shell/commands/patchCommand.cpp'; fi`

shell/commands/katana-extractCommand.o: shell/commands/extractCommand.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(katana_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT shell/commands/katana-extractCommand.o -MD -MP -MF shell/commands/$(DEPDIR)/katana-extractCommand.Tpo -c -o shell/commands/katana-extractCommand.o `test -f 'shell/commands/extractCommand.cpp' || echo '$(srcdir)/'`shell/commands/extractCommand.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) shell/commands/$(DEPDIR)/katana-extractCommand.Tpo shell/commands/$(DEPDIR)/katana-extractCommand.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='shell/commands/extractCommand.cpp' object='shell/commands/katana-extractCommand.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(katana_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o shell/commands/katana-extractCommand.o `test -f 'shell/commands/extractCommand.cpp' || echo '$(srcdir)/'`shell/commands/extractCommand.cpp

shell/commands/katana-extractCommand.obj: shell/commands/extractCommand.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(katana_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT shell/commands/katana-extractCommand.obj -MD -MP -MF shell/commands/$(DEPDIR)/katana-extractCommand.Tpo -c -o shell/commands/katana-extractCommand.obj `if test -f 'shell/commands/extractCommand.cpp'; then $(CYGPATH_W) 'shell/commands/extractCommand.cpp'; else $(CYGPATH_W) '$(srcdir)/shell/commands/extractCommand.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) shell/commands/$(DEPDIR)/katana-extractCommand.Tpo shell/commands/$(DEPDIR)/katana-extractCommand.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='shell/commands/extractCommand.cpp' object='shell/commands/katana-extractCommand.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(katana_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o shell/commands/katana-extractCommand.obj `if test -f 'shell/commands/extractCommand.cpp'; then $(CYGPATH_W) 'shell/commands/extractCommand.cpp'; else $(CYGPATH_W) '$(srcdir)/shell/commands/extractCommand.cpp'; fi`

shell/variableTypes/katana-elfVariableData.o: shell/variableTypes/elfVariableData.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(katana_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT shell/variableTypes/katana-elfVariableData.o -MD -MP -MF shell/variableTypes/$(DEPDIR)/katana-elfVariableData.Tpo -c -o shell/variableTypes/katana-elfVariableData.o `test -f 'shell/variableTypes/elfVariableData.cpp' || echo '$(srcdir)/'`shell/variableTypes/elfVariableData.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) shell/variableTypes/$(DEPDIR)/katana-elfVariableData.Tpo shell/variableTypes/$(DEPDIR)/katana-elfVariableData.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='shell/variableTypes/elfVariableData.cpp' object='shell/variableTypes/katana-elfVariableData.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(katana_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o shell/variableTypes/katana-elfVariableData.o `test -f 'shell/variableTypes/elfVariableData.cpp' || echo '$(srcdir)/'`shell/variableTypes/elfVariableData.cpp

shell/variableTypes/katana-elfVariableData.obj: shell/variableTypes/elfVariableData.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(katana_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT shell/variableTypes/katana-elfVariableData.obj -MD -MP -MF shell/variableTypes/$(DEPDIR)/katana-elfVariableData.Tpo -c -o shell/variableTypes/katana-elfVariableData.obj `if test -f 'shell/variableTypes/elfVariableData.cpp'; then $(CYGPATH_W) 'shell/variableTypes/elfVariableData.cpp'; else $(CYGPATH_W) '$(srcdir)/shell/variableTypes/elfVariableData.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) shell/variableTypes/$(DEPDIR)/katana-elfVariableData.Tpo shell/variableTypes/$(DEPDIR)/katana-elfVariableData.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='shell/variableTypes/elfVariableData.cpp' object='shell/variableTypes/katana-elfVariableData.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(katana_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o shell/variableTypes/katana-elfVariableData.obj `if test -f 'shell/variableTypes/elfVariableData.cpp'; then $(CYGPATH_W) 'shell/variableTypes/elfVariableData.cpp'; else $(CYGPATH_W) '$(srcdir)/shell/variableTypes/elfVariableData.cpp'; fi`

shell/variableTypes/katana-rawVariableData.o: shell/variableTypes/rawVariableData.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(katana_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT shell/variableTypes/katana-rawVariableData.o -MD -MP -MF shell/variableTypes/$(DEPDIR)/katana-rawVariableData.Tpo -c -o shell/variableTypes/katana-rawVariableData.o `test -f 'shell/variableTypes/rawVariableData.cpp' || echo '$(srcdir)/'`shell/variableTypes/rawVariableData.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) shell/variableTypes/$(DEPDIR)/katana-rawVariableData.Tpo shell/variableTypes/$(DEPDIR)/katana-rawVariableData.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='shell/variableTypes/rawVariableData.cpp' object='shell/variableTypes/katana-rawVariableData.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(katana_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o shell/variableTypes/katana-rawVariableData.o `test -f 'shell/variableTypes/rawVariableData.cpp' || echo '$(srcdir)/'`shell/variableTypes/rawVariableData.cpp

shell/variableTypes/katana-rawVariableData.obj: shell/variableTypes/rawVariableData.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(katana_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT shell/variableTypes/katana-rawVariableData.obj -MD -MP -MF shell/variableTypes/$(DEPDIR)/katana-rawVariableData.Tpo -c -o shell/variableTypes/katana-rawVariableData.obj `if test -f 'shell/variableTypes/rawVariableData.cpp'; then $(CYGPATH_W) 'shell/variableTypes/rawVariableData.cpp'; else $(CYGPATH_W) '$(srcdir)/shell/variableTypes/rawVariableData.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) shell/variableTypes/$(DEPDIR)/katana-rawVariableData.Tpo shell/variableTypes/$(DEPDIR)/katana-rawVariableData.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='shell/variableTypes/rawVariableData.cpp' object='shell/variableTypes/katana-rawVariableData.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(katana_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o shell/variableTypes/katana-rawVariableData.obj `if test -f 'shell/variableTypes/rawVariableData.cpp'; then $(CYGPATH_W) 'shell/variableTypes/rawVariableData.cpp'; else $(CYGPATH_W) '$(srcdir)/shell/variableTypes/rawVariableData.cpp'; fi`

shell/variableTypes/katana-arrayData.o: shell/variableTypes/arrayData.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(katana_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT shell/variableTypes/katana-arrayData.o -MD -MP -MF shell/variableTypes/$(DEPDIR)/katana-arrayData.Tpo -c -o shell/variableTypes/katana-arrayData.o `test -f 'shell/variableTypes/arrayData.cpp' || echo '$(srcdir)/'`shell/variableTypes/arrayData.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) shell/variableTypes/$(DEPDIR)/katana-arrayData.Tpo shell/variableTypes/$(DEPDIR)/katana-arrayData.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='shell/variableTypes/arrayData.cpp' object='shell/variableTypes/katana-arrayData.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(katana_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o shell/variableTypes/katana-arrayData.o `test -f 'shell/variableTypes/arrayData.cpp' || echo '$(srcdir)/'`shell/variableTypes/arrayData.cpp

shell/variableTypes/katana-arrayData.obj: shell/variableTypes/arrayData.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(katana_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT shell/variableTypes/katana-arrayData.obj -MD -MP -MF shell/variableTypes/$(DEPDIR)/katana-arrayData.Tpo -c -o shell/variableTypes/katana-arrayData.obj `if test -f 'shell/variableTypes/arrayData.cpp'; then $(CYGPATH_W) 'shell/variableTypes/arrayData.cpp'; else $(CYGPATH_W) '$(srcdir)/shell/variableTypes/arrayData.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) shell/variableTypes/$(DEPDIR)/katana-arrayData.Tpo shell/variableTypes/$(DEPDIR)/katana-arrayData.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='shell/variableTypes/arrayData.cpp' object='shell/variableTypes/katana-arrayData.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(katana_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o shell/variableTypes/katana-arrayData.obj `if test -f 'shell/variableTypes/arrayData.cpp'; then $(CYGPATH_W) 'shell/variableTypes/arrayData.cpp'; else $(CYGPATH_W) '$(srcdir)/shell/variableTypes/arrayData.cpp'; fi`

shell/variableTypes/katana-elfSectionData.o: shell/variableTypes/elfSectionData.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(katana_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT shell/variableTypes/katana-elfSectionData.o -MD -MP -MF shell/variableTypes/$(DEPDIR)/katana-elfSectionData.Tpo -c -o shell/variableTypes/katana-elfSectionData.o `test -f 'shell/variableTypes/elfSectionData.cpp' || echo '$(srcdir)/'`shell/variableTypes/elfSectionData.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) shell/variableTypes/$(DEPDIR)/katana-elfSectionData.Tpo shell/variableTypes/$(DEPDIR)/katana-elfSectionData.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='shell/variableTypes/elfSectionData.cpp' object='shell/variableTypes/katana-elfSectionData.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(katana_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o shell/variableTypes/katana-elfSectionData.o `test -f 'shell/variableTypes/elfSectionData.cpp' || echo '$(srcdir)/'`shell/variableTypes/elfSectionData.cpp

shell/variableTypes/katana-elfSectionData.obj: shell/variableTypes/elfSectionData.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(katana_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT shell/variableTypes/katana-elfSectionData.obj -MD -MP -MF shell/variableTypes/$(DEPDIR)/katana-elfSectionData.Tpo -c -o shell/variableTypes/katana-elfSectionData.obj `if test -f 'shell/variableTypes/elfSectionData.cpp'; then $(CYGPATH_W) 'shell/variableTypes/elfSectionData.cpp'; else $(CYGPATH_W) '$(srcdir)/shell/variableTypes/elfSectionData.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) shell/variableTypes/$(DEPDIR)/katana-elfSectionData.Tpo shell/variableTypes/$(DEPDIR)/katana-elfSectionData.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='shell/variableTypes/elfSectionData.cpp' object='shell/variableTypes/katana-elfSectionData.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(katana_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o shell/variableTypes/katana-elfSectionData.obj `if test -f 'shell/variableTypes/elfSectionData.cpp'; then $(CYGPATH_W) 'shell/variableTypes/elfSectionData.cpp'; else $(CYGPATH_W) '$(srcdir)/shell/variableTypes/elfSectionData.cpp'; fi`

shell/variableTypes/katana-stringData.o: shell/variableTypes/stringData.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(katana_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT shell/variableTypes/katana-stringData.o -MD -MP -MF shell/variableTypes/$(DEPDIR)/katana-stringData.Tpo -c -o shell/variableTypes/katana-stringData.o `test -f 'shell/variableTypes/stringData.cpp' || echo '$(srcdir)/'`shell/variableTypes/stringData.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) shell/variableTypes/$(DEPDIR)/katana-stringData.Tpo shell/variableTypes/$(DEPDIR)/katana-stringData.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='shell/variableTypes/stringData.cpp' object='shell/variableTypes/katana-stringData.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(katana_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o shell/variableTypes/katana-stringData.o `test -f 'shell/variableTypes/stringData.cpp' || echo '$(srcdir)/'`shell/variableTypes/stringData.cpp

shell/variableTypes/katana-stringData.obj: shell/variableTypes/stringData.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(katana_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT shell/variableTypes/katana-stringData.obj -MD -MP -MF shell/variableTypes/$(DEPDIR)/katana-stringData.Tpo -c -o shell/variableTypes/katana-stringData.obj `if test -f 'shell/variableTypes/stringData.cpp'; then $(CYGPATH_W) 'shell/variableTypes/stringData.cpp'; else $(CYGPATH_W) '$(srcdir)/shell/variableTypes/stringData.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) shell/variableTypes/$(DEPDIR)/katana-stringData.Tpo shell/variableTypes/$(DEPDIR)/katana-stringData.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='shell/variableTypes/stringData.cpp' object='shell/variableTypes/katana-stringData.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(katana_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o shell/variableTypes/katana-stringData.obj `if test -f 'shell/variableTypes/stringData.cpp'; then $(CYGPATH_W) 'shell/variableTypes/stringData.cpp'; else $(CYGPATH_W) '$(srcdir)/shell/variableTypes/stringData.cpp'; fi`

# This directory's subdirectories are mostly independent; you can cd
# into them and run 'make' without going through this Makefile.
# To change the values of 'make' variables: instead of editing Makefiles,
# (1) if the variable is set in 'config.status', edit 'config.status'
#     (which will cause the Makefiles to be regenerated when you run 'make');
# (2) otherwise, pass the desired values on the 'make' command line.
$(am__recursive_targets):
	@fail=; \
	if $(am__make_keepgoing); then \
	  failcom='fail=yes'; \
	else \
	  failcom='exit 1'; \
	fi; \
	dot_seen=no; \
	target=`echo $@ | sed s/-recursive//`; \
	case "$@" in \
	  distclean-* | maintainer-clean-*) list='$(DIST_SUBDIRS)' ;; \
	  *) list='$(SUBDIRS)' ;; \
	esac; \
	for subdir in $$list; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    dot_seen=yes; \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  ($(am__cd) $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	  || eval $$failcom; \
	done; \
	if test "$$dot_seen" = "no"; then \
	  $(MAKE) $(AM_MAKEFLAGS) "$$target-am" || exit 1; \
	fi; test -z "$$fail"

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-recursive
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	if ($(ETAGS) --etags-include --version) >/dev/null 2>&1; then \
	  include_option=--etags-include; \
	  empty_fix=.; \
	else \
	  include_option=--include; \
	  empty_fix=; \
	fi; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test ! -f $$subdir/TAGS || \
	      set "$$@" "$$include_option=$$here/$$subdir/TAGS"; \
	  fi; \
	done; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-recursive

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscopelist: cscopelist-recursive

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
	@list='$(DIST_SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    $(am__make_dryrun) \
	      || test -d "$(distdir)/$$subdir" \
	      || $(MKDIR_P) "$(distdir)/$$subdir" \
	      || exit 1; \
	    dir1=$$subdir; dir2="$(distdir)/$$subdir"; \
	    $(am__relativize); \
	    new_distdir=$$reldir; \
	    dir1=$$subdir; dir2="$(top_distdir)"; \
	    $(am__relativize); \
	    new_top_distdir=$$reldir; \
	    echo " (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) top_distdir="$$new_top_distdir" distdir="$$new_distdir" \\"; \
	    echo "     am__remove_distdir=: am__skip_length_check=: am__skip_mode_fix=: distdir)"; \
	    ($(am__cd) $$subdir && \
	      $(MAKE) $(AM_MAKEFLAGS) \
	        top_distdir="$$new_top_distdir" \
	        distdir="$$new_distdir" \
		am__remove_distdir=: \
		am__skip_length_check=: \
		am__skip_mode_fix=: \
	        distdir) \
	      || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-recursive
all-am: Makefile $(PROGRAMS)
installdirs: installdirs-recursive
installdirs-am:
	for dir in "$(DESTDIR)$(bindir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-recursive
install-exec: install-exec-recursive
install-data: install-data-recursive
uninstall: uninstall-recursive

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-recursive
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)
	-rm -f info/$(DEPDIR)/$(am__dirstamp)
	-rm -f info/$(am__dirstamp)
	-rm -f patcher/$(DEPDIR)/$(am__dirstamp)
	-rm -f patcher/$(am__dirstamp)
	-rm -f patchwrite/$(DEPDIR)/$(am__dirstamp)
	-rm -f patchwrite/$(am__dirstamp)
	-rm -f rewriter/$(DEPDIR)/$(am__dirstamp)
	-rm -f rewriter/$(am__dirstamp)
	-rm -f shell/$(DEPDIR)/$(am__dirstamp)
	-rm -f shell/$(am__dirstamp)
	-rm -f shell/commands/$(DEPDIR)/$(am__dirstamp)
	-rm -f shell/commands/$(am__dirstamp)
	-rm -f shell/dwarfscript/$(DEPDIR)/$(am__dirstamp)
	-rm -f shell/dwarfscript/$(am__dirstamp)
	-rm -f shell/variableTypes/$(DEPDIR)/$(am__dirstamp)
	-rm -f shell/variableTypes/$(am__dirstamp)
	-rm -f util/$(DEPDIR)/$(am__dirstamp)
	-rm -f util/$(am__dirstamp)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-recursive

clean-am: clean-binPROGRAMS clean-generic mostlyclean-am

distclean: distclean-recursive
	-rm -rf ./$(DEPDIR) info/$(DEPDIR) patcher/$(DEPDIR) patchwrite/$(DEPDIR) rewriter/$(DEPDIR) shell/$(DEPDIR) shell/commands/$(DEPDIR) shell/dwarfscript/$(DEPDIR) shell/variableTypes/$(DEPDIR) util/$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-recursive

dvi-am:

html: html-recursive

html-am:

info: info-recursive

info-am:

install-data-am:

install-dvi: install-dvi-recursive

install-dvi-am:

install-exec-am: install-binPROGRAMS

install-html: install-html-recursive

install-html-am:

install-info: install-info-recursive

install-info-am:

install-man:

install-pdf: install-pdf-recursive

install-pdf-am:

install-ps: install-ps-recursive

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-recursive
	-rm -rf ./$(DEPDIR) info/$(DEPDIR) patcher/$(DEPDIR) patchwrite/$(DEPDIR) rewriter/$(DEPDIR) shell/$(DEPDIR) shell/commands/$(DEPDIR) shell/dwarfscript/$(DEPDIR) shell/variableTypes/$(DEPDIR) util/$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-recursive

mostlyclean-am: mostlyclean-compile mostlyclean-generic

pdf: pdf-recursive

pdf-am:

ps: ps-recursive

ps-am:

uninstall-am: uninstall-binPROGRAMS

.MAKE: $(am__recursive_targets) install-am install-strip

.PHONY: $(am__recursive_targets) CTAGS GTAGS TAGS all all-am check \
	check-am clean clean-binPROGRAMS clean-generic cscopelist-am \
	ctags ctags-am distclean distclean-compile distclean-generic \
	distclean-tags distdir dvi dvi-am html html-am info info-am \
	install install-am install-binPROGRAMS install-data \
	install-data-am install-dvi install-dvi-am install-exec \
	install-exec-am install-html install-html-am install-info \
	install-info-am install-man install-pdf install-pdf-am \
	install-ps install-ps-am install-strip installcheck \
	installcheck-am installdirs installdirs-am maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic pdf pdf-am ps ps-am tags tags-am uninstall \
	uninstall-am uninstall-binPROGRAMS


# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
